//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace EktronCrawler.EktronWeb.TaxonomyApi {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TaxonomySoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BaseDataOfTaxonomyItemData))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BaseDataOfTaxonomyBaseData))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PageRequestData))]
    public partial class Taxonomy : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private AuthenticationHeader authenticationHeaderValueField;
        
        private RequestInfoParameters requestInfoParametersValueField;
        
        private System.Threading.SendOrPostCallback LoadTaxonomyOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateTaxonomyOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTaxonomyOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTaxonomyOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadTaxonomyOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTaxonomyItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveTaxonomyItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTaxonomySyncFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveTaxonomyFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadAllAssignedCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTaxonomyItem1OperationCompleted;
        
        private System.Threading.SendOrPostCallback ReOrderTaxonomyItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTaxonomyIdByPathOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Taxonomy() {
            this.Url = global::EktronCrawler.Properties.Settings.Default.EktronCrawler_EktronWeb_TaxonomyApi_Taxonomy;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public AuthenticationHeader AuthenticationHeaderValue {
            get {
                return this.authenticationHeaderValueField;
            }
            set {
                this.authenticationHeaderValueField = value;
            }
        }
        
        public RequestInfoParameters RequestInfoParametersValue {
            get {
                return this.requestInfoParametersValueField;
            }
            set {
                this.requestInfoParametersValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event LoadTaxonomyCompletedEventHandler LoadTaxonomyCompleted;
        
        /// <remarks/>
        public event CreateTaxonomyCompletedEventHandler CreateTaxonomyCompleted;
        
        /// <remarks/>
        public event UpdateTaxonomyCompletedEventHandler UpdateTaxonomyCompleted;
        
        /// <remarks/>
        public event DeleteTaxonomyCompletedEventHandler DeleteTaxonomyCompleted;
        
        /// <remarks/>
        public event ReadTaxonomyCompletedEventHandler ReadTaxonomyCompleted;
        
        /// <remarks/>
        public event AddTaxonomyItemCompletedEventHandler AddTaxonomyItemCompleted;
        
        /// <remarks/>
        public event RemoveTaxonomyItemCompletedEventHandler RemoveTaxonomyItemCompleted;
        
        /// <remarks/>
        public event AddTaxonomySyncFolderCompletedEventHandler AddTaxonomySyncFolderCompleted;
        
        /// <remarks/>
        public event RemoveTaxonomyFolderCompletedEventHandler RemoveTaxonomyFolderCompleted;
        
        /// <remarks/>
        public event ReadAllAssignedCategoryCompletedEventHandler ReadAllAssignedCategoryCompleted;
        
        /// <remarks/>
        public event AddTaxonomyItem1CompletedEventHandler AddTaxonomyItem1Completed;
        
        /// <remarks/>
        public event ReOrderTaxonomyItemsCompletedEventHandler ReOrderTaxonomyItemsCompleted;
        
        /// <remarks/>
        public event GetTaxonomyIdByPathCompletedEventHandler GetTaxonomyIdByPathCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestInfoParametersValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadTaxonomy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaxonomyData LoadTaxonomy(ref TaxonomyRequest TaxonomyReq) {
            object[] results = this.Invoke("LoadTaxonomy", new object[] {
                        TaxonomyReq});
            TaxonomyReq = ((TaxonomyRequest)(results[1]));
            return ((TaxonomyData)(results[0]));
        }
        
        /// <remarks/>
        public void LoadTaxonomyAsync(TaxonomyRequest TaxonomyReq) {
            this.LoadTaxonomyAsync(TaxonomyReq, null);
        }
        
        /// <remarks/>
        public void LoadTaxonomyAsync(TaxonomyRequest TaxonomyReq, object userState) {
            if ((this.LoadTaxonomyOperationCompleted == null)) {
                this.LoadTaxonomyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadTaxonomyOperationCompleted);
            }
            this.InvokeAsync("LoadTaxonomy", new object[] {
                        TaxonomyReq}, this.LoadTaxonomyOperationCompleted, userState);
        }
        
        private void OnLoadTaxonomyOperationCompleted(object arg) {
            if ((this.LoadTaxonomyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadTaxonomyCompleted(this, new LoadTaxonomyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestInfoParametersValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateTaxonomy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long CreateTaxonomy(TaxonomyData TaxonomyReq) {
            object[] results = this.Invoke("CreateTaxonomy", new object[] {
                        TaxonomyReq});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void CreateTaxonomyAsync(TaxonomyData TaxonomyReq) {
            this.CreateTaxonomyAsync(TaxonomyReq, null);
        }
        
        /// <remarks/>
        public void CreateTaxonomyAsync(TaxonomyData TaxonomyReq, object userState) {
            if ((this.CreateTaxonomyOperationCompleted == null)) {
                this.CreateTaxonomyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTaxonomyOperationCompleted);
            }
            this.InvokeAsync("CreateTaxonomy", new object[] {
                        TaxonomyReq}, this.CreateTaxonomyOperationCompleted, userState);
        }
        
        private void OnCreateTaxonomyOperationCompleted(object arg) {
            if ((this.CreateTaxonomyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTaxonomyCompleted(this, new CreateTaxonomyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestInfoParametersValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateTaxonomy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateTaxonomy(TaxonomyData TaxonomyReq) {
            this.Invoke("UpdateTaxonomy", new object[] {
                        TaxonomyReq});
        }
        
        /// <remarks/>
        public void UpdateTaxonomyAsync(TaxonomyData TaxonomyReq) {
            this.UpdateTaxonomyAsync(TaxonomyReq, null);
        }
        
        /// <remarks/>
        public void UpdateTaxonomyAsync(TaxonomyData TaxonomyReq, object userState) {
            if ((this.UpdateTaxonomyOperationCompleted == null)) {
                this.UpdateTaxonomyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTaxonomyOperationCompleted);
            }
            this.InvokeAsync("UpdateTaxonomy", new object[] {
                        TaxonomyReq}, this.UpdateTaxonomyOperationCompleted, userState);
        }
        
        private void OnUpdateTaxonomyOperationCompleted(object arg) {
            if ((this.UpdateTaxonomyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTaxonomyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestInfoParametersValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteTaxonomy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteTaxonomy(TaxonomyRequest TaxonomyReq) {
            this.Invoke("DeleteTaxonomy", new object[] {
                        TaxonomyReq});
        }
        
        /// <remarks/>
        public void DeleteTaxonomyAsync(TaxonomyRequest TaxonomyReq) {
            this.DeleteTaxonomyAsync(TaxonomyReq, null);
        }
        
        /// <remarks/>
        public void DeleteTaxonomyAsync(TaxonomyRequest TaxonomyReq, object userState) {
            if ((this.DeleteTaxonomyOperationCompleted == null)) {
                this.DeleteTaxonomyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTaxonomyOperationCompleted);
            }
            this.InvokeAsync("DeleteTaxonomy", new object[] {
                        TaxonomyReq}, this.DeleteTaxonomyOperationCompleted, userState);
        }
        
        private void OnDeleteTaxonomyOperationCompleted(object arg) {
            if ((this.DeleteTaxonomyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTaxonomyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestInfoParametersValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReadTaxonomy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaxonomyData ReadTaxonomy(ref TaxonomyRequest TaxonomyReq) {
            object[] results = this.Invoke("ReadTaxonomy", new object[] {
                        TaxonomyReq});
            TaxonomyReq = ((TaxonomyRequest)(results[1]));
            return ((TaxonomyData)(results[0]));
        }
        
        /// <remarks/>
        public void ReadTaxonomyAsync(TaxonomyRequest TaxonomyReq) {
            this.ReadTaxonomyAsync(TaxonomyReq, null);
        }
        
        /// <remarks/>
        public void ReadTaxonomyAsync(TaxonomyRequest TaxonomyReq, object userState) {
            if ((this.ReadTaxonomyOperationCompleted == null)) {
                this.ReadTaxonomyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadTaxonomyOperationCompleted);
            }
            this.InvokeAsync("ReadTaxonomy", new object[] {
                        TaxonomyReq}, this.ReadTaxonomyOperationCompleted, userState);
        }
        
        private void OnReadTaxonomyOperationCompleted(object arg) {
            if ((this.ReadTaxonomyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadTaxonomyCompleted(this, new ReadTaxonomyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestInfoParametersValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddTaxonomyItem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddTaxonomyItem(TaxonomyRequest TaxonomyReq) {
            this.Invoke("AddTaxonomyItem", new object[] {
                        TaxonomyReq});
        }
        
        /// <remarks/>
        public void AddTaxonomyItemAsync(TaxonomyRequest TaxonomyReq) {
            this.AddTaxonomyItemAsync(TaxonomyReq, null);
        }
        
        /// <remarks/>
        public void AddTaxonomyItemAsync(TaxonomyRequest TaxonomyReq, object userState) {
            if ((this.AddTaxonomyItemOperationCompleted == null)) {
                this.AddTaxonomyItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTaxonomyItemOperationCompleted);
            }
            this.InvokeAsync("AddTaxonomyItem", new object[] {
                        TaxonomyReq}, this.AddTaxonomyItemOperationCompleted, userState);
        }
        
        private void OnAddTaxonomyItemOperationCompleted(object arg) {
            if ((this.AddTaxonomyItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTaxonomyItemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestInfoParametersValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveTaxonomyItem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveTaxonomyItem(TaxonomyRequest TaxonomyReq) {
            this.Invoke("RemoveTaxonomyItem", new object[] {
                        TaxonomyReq});
        }
        
        /// <remarks/>
        public void RemoveTaxonomyItemAsync(TaxonomyRequest TaxonomyReq) {
            this.RemoveTaxonomyItemAsync(TaxonomyReq, null);
        }
        
        /// <remarks/>
        public void RemoveTaxonomyItemAsync(TaxonomyRequest TaxonomyReq, object userState) {
            if ((this.RemoveTaxonomyItemOperationCompleted == null)) {
                this.RemoveTaxonomyItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveTaxonomyItemOperationCompleted);
            }
            this.InvokeAsync("RemoveTaxonomyItem", new object[] {
                        TaxonomyReq}, this.RemoveTaxonomyItemOperationCompleted, userState);
        }
        
        private void OnRemoveTaxonomyItemOperationCompleted(object arg) {
            if ((this.RemoveTaxonomyItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveTaxonomyItemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestInfoParametersValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddTaxonomySyncFolder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddTaxonomySyncFolder(TaxonomySyncRequest TaxonomyReq) {
            this.Invoke("AddTaxonomySyncFolder", new object[] {
                        TaxonomyReq});
        }
        
        /// <remarks/>
        public void AddTaxonomySyncFolderAsync(TaxonomySyncRequest TaxonomyReq) {
            this.AddTaxonomySyncFolderAsync(TaxonomyReq, null);
        }
        
        /// <remarks/>
        public void AddTaxonomySyncFolderAsync(TaxonomySyncRequest TaxonomyReq, object userState) {
            if ((this.AddTaxonomySyncFolderOperationCompleted == null)) {
                this.AddTaxonomySyncFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTaxonomySyncFolderOperationCompleted);
            }
            this.InvokeAsync("AddTaxonomySyncFolder", new object[] {
                        TaxonomyReq}, this.AddTaxonomySyncFolderOperationCompleted, userState);
        }
        
        private void OnAddTaxonomySyncFolderOperationCompleted(object arg) {
            if ((this.AddTaxonomySyncFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTaxonomySyncFolderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestInfoParametersValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveTaxonomyFolder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveTaxonomyFolder(TaxonomySyncRequest TaxonomyReq) {
            this.Invoke("RemoveTaxonomyFolder", new object[] {
                        TaxonomyReq});
        }
        
        /// <remarks/>
        public void RemoveTaxonomyFolderAsync(TaxonomySyncRequest TaxonomyReq) {
            this.RemoveTaxonomyFolderAsync(TaxonomyReq, null);
        }
        
        /// <remarks/>
        public void RemoveTaxonomyFolderAsync(TaxonomySyncRequest TaxonomyReq, object userState) {
            if ((this.RemoveTaxonomyFolderOperationCompleted == null)) {
                this.RemoveTaxonomyFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveTaxonomyFolderOperationCompleted);
            }
            this.InvokeAsync("RemoveTaxonomyFolder", new object[] {
                        TaxonomyReq}, this.RemoveTaxonomyFolderOperationCompleted, userState);
        }
        
        private void OnRemoveTaxonomyFolderOperationCompleted(object arg) {
            if ((this.RemoveTaxonomyFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveTaxonomyFolderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestInfoParametersValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReadAllAssignedCategory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaxonomyBaseData[] ReadAllAssignedCategory(long ContentId) {
            object[] results = this.Invoke("ReadAllAssignedCategory", new object[] {
                        ContentId});
            return ((TaxonomyBaseData[])(results[0]));
        }
        
        /// <remarks/>
        public void ReadAllAssignedCategoryAsync(long ContentId) {
            this.ReadAllAssignedCategoryAsync(ContentId, null);
        }
        
        /// <remarks/>
        public void ReadAllAssignedCategoryAsync(long ContentId, object userState) {
            if ((this.ReadAllAssignedCategoryOperationCompleted == null)) {
                this.ReadAllAssignedCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadAllAssignedCategoryOperationCompleted);
            }
            this.InvokeAsync("ReadAllAssignedCategory", new object[] {
                        ContentId}, this.ReadAllAssignedCategoryOperationCompleted, userState);
        }
        
        private void OnReadAllAssignedCategoryOperationCompleted(object arg) {
            if ((this.ReadAllAssignedCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadAllAssignedCategoryCompleted(this, new ReadAllAssignedCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestInfoParametersValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="AddTaxonomyItem1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddTaxonomyItem ContentRequest", RequestElementName="AddTaxonomyItem ContentRequest", RequestNamespace="http://tempuri.org/", ResponseElementName="AddTaxonomyItem ContentRequestResponse", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddTaxonomyItem(TaxonomyContentRequest TaxonomyReq) {
            this.Invoke("AddTaxonomyItem1", new object[] {
                        TaxonomyReq});
        }
        
        /// <remarks/>
        public void AddTaxonomyItem1Async(TaxonomyContentRequest TaxonomyReq) {
            this.AddTaxonomyItem1Async(TaxonomyReq, null);
        }
        
        /// <remarks/>
        public void AddTaxonomyItem1Async(TaxonomyContentRequest TaxonomyReq, object userState) {
            if ((this.AddTaxonomyItem1OperationCompleted == null)) {
                this.AddTaxonomyItem1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTaxonomyItem1OperationCompleted);
            }
            this.InvokeAsync("AddTaxonomyItem1", new object[] {
                        TaxonomyReq}, this.AddTaxonomyItem1OperationCompleted, userState);
        }
        
        private void OnAddTaxonomyItem1OperationCompleted(object arg) {
            if ((this.AddTaxonomyItem1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTaxonomyItem1Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestInfoParametersValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReOrderTaxonomyItems", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ReOrderTaxonomyItems(TaxonomyRequest TaxonomyReq) {
            this.Invoke("ReOrderTaxonomyItems", new object[] {
                        TaxonomyReq});
        }
        
        /// <remarks/>
        public void ReOrderTaxonomyItemsAsync(TaxonomyRequest TaxonomyReq) {
            this.ReOrderTaxonomyItemsAsync(TaxonomyReq, null);
        }
        
        /// <remarks/>
        public void ReOrderTaxonomyItemsAsync(TaxonomyRequest TaxonomyReq, object userState) {
            if ((this.ReOrderTaxonomyItemsOperationCompleted == null)) {
                this.ReOrderTaxonomyItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReOrderTaxonomyItemsOperationCompleted);
            }
            this.InvokeAsync("ReOrderTaxonomyItems", new object[] {
                        TaxonomyReq}, this.ReOrderTaxonomyItemsOperationCompleted, userState);
        }
        
        private void OnReOrderTaxonomyItemsOperationCompleted(object arg) {
            if ((this.ReOrderTaxonomyItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReOrderTaxonomyItemsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestInfoParametersValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTaxonomyIdByPath", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetTaxonomyIdByPath(string TaxonomyPath) {
            object[] results = this.Invoke("GetTaxonomyIdByPath", new object[] {
                        TaxonomyPath});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetTaxonomyIdByPathAsync(string TaxonomyPath) {
            this.GetTaxonomyIdByPathAsync(TaxonomyPath, null);
        }
        
        /// <remarks/>
        public void GetTaxonomyIdByPathAsync(string TaxonomyPath, object userState) {
            if ((this.GetTaxonomyIdByPathOperationCompleted == null)) {
                this.GetTaxonomyIdByPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTaxonomyIdByPathOperationCompleted);
            }
            this.InvokeAsync("GetTaxonomyIdByPath", new object[] {
                        TaxonomyPath}, this.GetTaxonomyIdByPathOperationCompleted, userState);
        }
        
        private void OnGetTaxonomyIdByPathOperationCompleted(object arg) {
            if ((this.GetTaxonomyIdByPathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTaxonomyIdByPathCompleted(this, new GetTaxonomyIdByPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/", IsNullable=false)]
    public partial class RequestInfoParameters : System.Web.Services.Protocols.SoapHeader {
        
        private int contentLanguageField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public int ContentLanguage {
            get {
                return this.contentLanguageField;
            }
            set {
                this.contentLanguageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class TaxonomyContentRequest {
        
        private long contentIdField;
        
        private string taxonomyListField;
        
        private long folderIDField;
        
        private int languageIdField;
        
        /// <remarks/>
        public long ContentId {
            get {
                return this.contentIdField;
            }
            set {
                this.contentIdField = value;
            }
        }
        
        /// <remarks/>
        public string TaxonomyList {
            get {
                return this.taxonomyListField;
            }
            set {
                this.taxonomyListField = value;
            }
        }
        
        /// <remarks/>
        public long FolderID {
            get {
                return this.folderIDField;
            }
            set {
                this.folderIDField = value;
            }
        }
        
        /// <remarks/>
        public int LanguageId {
            get {
                return this.languageIdField;
            }
            set {
                this.languageIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class AnalyticsData {
        
        private int contentViewCountField;
        
        private decimal contentRatingAverageField;
        
        private int contentRatingCountField;
        
        /// <remarks/>
        public int ContentViewCount {
            get {
                return this.contentViewCountField;
            }
            set {
                this.contentViewCountField = value;
            }
        }
        
        /// <remarks/>
        public decimal ContentRatingAverage {
            get {
                return this.contentRatingAverageField;
            }
            set {
                this.contentRatingAverageField = value;
            }
        }
        
        /// <remarks/>
        public int ContentRatingCount {
            get {
                return this.contentRatingCountField;
            }
            set {
                this.contentRatingCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class AssetData {
        
        private string idField;
        
        private string versionField;
        
        private string mimeTypeField;
        
        private string mimeNameField;
        
        private string fileNameField;
        
        private string fileExtensionField;
        
        private string imageUrlField;
        
        private string iconField;
        
        private string statusField;
        
        private int languageField;
        
        private int typeField;
        
        private string pluginTypeField;
        
        private bool publishPdfActiveField;
        
        /// <remarks/>
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        public string MimeType {
            get {
                return this.mimeTypeField;
            }
            set {
                this.mimeTypeField = value;
            }
        }
        
        /// <remarks/>
        public string MimeName {
            get {
                return this.mimeNameField;
            }
            set {
                this.mimeNameField = value;
            }
        }
        
        /// <remarks/>
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        public string FileExtension {
            get {
                return this.fileExtensionField;
            }
            set {
                this.fileExtensionField = value;
            }
        }
        
        /// <remarks/>
        public string ImageUrl {
            get {
                return this.imageUrlField;
            }
            set {
                this.imageUrlField = value;
            }
        }
        
        /// <remarks/>
        public string Icon {
            get {
                return this.iconField;
            }
            set {
                this.iconField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public int Language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
        
        /// <remarks/>
        public int Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string PluginType {
            get {
                return this.pluginTypeField;
            }
            set {
                this.pluginTypeField = value;
            }
        }
        
        /// <remarks/>
        public bool PublishPdfActive {
            get {
                return this.publishPdfActiveField;
            }
            set {
                this.publishPdfActiveField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CmsDataOfTaxonomyItemData))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaxonomyItemData))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public abstract partial class BaseDataOfTaxonomyItemData {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaxonomyItemData))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public abstract partial class CmsDataOfTaxonomyItemData : BaseDataOfTaxonomyItemData {
        
        private long idField;
        
        /// <remarks/>
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class TaxonomyItemData : CmsDataOfTaxonomyItemData {
        
        private long taxonomyIdField;
        
        private string taxonomyTitleField;
        
        private AssetData assetDataField;
        
        private string contentTypeField;
        
        private ItemStatus taxonomyItemStatusField;
        
        private CMSContentSubtype contentSubTypeField;
        
        private AnalyticsData taxonomyItemAnalyticsInfoField;
        
        private int taxonomyLanguageIdField;
        
        private long taxonomyItemIdField;
        
        private int taxonomyItemLanguageField;
        
        private TaxonomyItemType taxonomyItemTypeField;
        
        private long taxonomyItemAddedUserField;
        
        private string taxonomyItemTitleField;
        
        private string taxonomyItemTeaserField;
        
        private string taxonomyItemQuickLinkField;
        
        private AssetData taxonomyItemAssetInfoField;
        
        private string taxonomyItemEditorLastNameField;
        
        private string taxonomyItemEditorFirstNameField;
        
        private System.DateTime taxonomyItemDateModifiedField;
        
        private System.DateTime dateCreatedField;
        
        private string taxonomyItemThumbnailField;
        
        private string taxonomyItemImageField;
        
        private string taxonomyItemHtmlField;
        
        private int taxonomyItemObjectTypeField;
        
        private string taxonomyItemFilePathField;
        
        private long taxonomyItemFolderIdField;
        
        private System.DateTime taxonomyItemGoLiveDateField;
        
        private System.DateTime taxonomyItemEndDateField;
        
        private string taxonomyItemDisplayDateCreatedField;
        
        private string taxonomyItemDisplayDateModifiedField;
        
        /// <remarks/>
        public long TaxonomyId {
            get {
                return this.taxonomyIdField;
            }
            set {
                this.taxonomyIdField = value;
            }
        }
        
        /// <remarks/>
        public string TaxonomyTitle {
            get {
                return this.taxonomyTitleField;
            }
            set {
                this.taxonomyTitleField = value;
            }
        }
        
        /// <remarks/>
        public AssetData AssetData {
            get {
                return this.assetDataField;
            }
            set {
                this.assetDataField = value;
            }
        }
        
        /// <remarks/>
        public string ContentType {
            get {
                return this.contentTypeField;
            }
            set {
                this.contentTypeField = value;
            }
        }
        
        /// <remarks/>
        public ItemStatus TaxonomyItemStatus {
            get {
                return this.taxonomyItemStatusField;
            }
            set {
                this.taxonomyItemStatusField = value;
            }
        }
        
        /// <remarks/>
        public CMSContentSubtype ContentSubType {
            get {
                return this.contentSubTypeField;
            }
            set {
                this.contentSubTypeField = value;
            }
        }
        
        /// <remarks/>
        public AnalyticsData TaxonomyItemAnalyticsInfo {
            get {
                return this.taxonomyItemAnalyticsInfoField;
            }
            set {
                this.taxonomyItemAnalyticsInfoField = value;
            }
        }
        
        /// <remarks/>
        public int TaxonomyLanguageId {
            get {
                return this.taxonomyLanguageIdField;
            }
            set {
                this.taxonomyLanguageIdField = value;
            }
        }
        
        /// <remarks/>
        public long TaxonomyItemId {
            get {
                return this.taxonomyItemIdField;
            }
            set {
                this.taxonomyItemIdField = value;
            }
        }
        
        /// <remarks/>
        public int TaxonomyItemLanguage {
            get {
                return this.taxonomyItemLanguageField;
            }
            set {
                this.taxonomyItemLanguageField = value;
            }
        }
        
        /// <remarks/>
        public TaxonomyItemType TaxonomyItemType {
            get {
                return this.taxonomyItemTypeField;
            }
            set {
                this.taxonomyItemTypeField = value;
            }
        }
        
        /// <remarks/>
        public long TaxonomyItemAddedUser {
            get {
                return this.taxonomyItemAddedUserField;
            }
            set {
                this.taxonomyItemAddedUserField = value;
            }
        }
        
        /// <remarks/>
        public string TaxonomyItemTitle {
            get {
                return this.taxonomyItemTitleField;
            }
            set {
                this.taxonomyItemTitleField = value;
            }
        }
        
        /// <remarks/>
        public string TaxonomyItemTeaser {
            get {
                return this.taxonomyItemTeaserField;
            }
            set {
                this.taxonomyItemTeaserField = value;
            }
        }
        
        /// <remarks/>
        public string TaxonomyItemQuickLink {
            get {
                return this.taxonomyItemQuickLinkField;
            }
            set {
                this.taxonomyItemQuickLinkField = value;
            }
        }
        
        /// <remarks/>
        public AssetData TaxonomyItemAssetInfo {
            get {
                return this.taxonomyItemAssetInfoField;
            }
            set {
                this.taxonomyItemAssetInfoField = value;
            }
        }
        
        /// <remarks/>
        public string TaxonomyItemEditorLastName {
            get {
                return this.taxonomyItemEditorLastNameField;
            }
            set {
                this.taxonomyItemEditorLastNameField = value;
            }
        }
        
        /// <remarks/>
        public string TaxonomyItemEditorFirstName {
            get {
                return this.taxonomyItemEditorFirstNameField;
            }
            set {
                this.taxonomyItemEditorFirstNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime TaxonomyItemDateModified {
            get {
                return this.taxonomyItemDateModifiedField;
            }
            set {
                this.taxonomyItemDateModifiedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateCreated {
            get {
                return this.dateCreatedField;
            }
            set {
                this.dateCreatedField = value;
            }
        }
        
        /// <remarks/>
        public string TaxonomyItemThumbnail {
            get {
                return this.taxonomyItemThumbnailField;
            }
            set {
                this.taxonomyItemThumbnailField = value;
            }
        }
        
        /// <remarks/>
        public string TaxonomyItemImage {
            get {
                return this.taxonomyItemImageField;
            }
            set {
                this.taxonomyItemImageField = value;
            }
        }
        
        /// <remarks/>
        public string TaxonomyItemHtml {
            get {
                return this.taxonomyItemHtmlField;
            }
            set {
                this.taxonomyItemHtmlField = value;
            }
        }
        
        /// <remarks/>
        public int TaxonomyItemObjectType {
            get {
                return this.taxonomyItemObjectTypeField;
            }
            set {
                this.taxonomyItemObjectTypeField = value;
            }
        }
        
        /// <remarks/>
        public string TaxonomyItemFilePath {
            get {
                return this.taxonomyItemFilePathField;
            }
            set {
                this.taxonomyItemFilePathField = value;
            }
        }
        
        /// <remarks/>
        public long TaxonomyItemFolderId {
            get {
                return this.taxonomyItemFolderIdField;
            }
            set {
                this.taxonomyItemFolderIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime TaxonomyItemGoLiveDate {
            get {
                return this.taxonomyItemGoLiveDateField;
            }
            set {
                this.taxonomyItemGoLiveDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime TaxonomyItemEndDate {
            get {
                return this.taxonomyItemEndDateField;
            }
            set {
                this.taxonomyItemEndDateField = value;
            }
        }
        
        /// <remarks/>
        public string TaxonomyItemDisplayDateCreated {
            get {
                return this.taxonomyItemDisplayDateCreatedField;
            }
            set {
                this.taxonomyItemDisplayDateCreatedField = value;
            }
        }
        
        /// <remarks/>
        public string TaxonomyItemDisplayDateModified {
            get {
                return this.taxonomyItemDisplayDateModifiedField;
            }
            set {
                this.taxonomyItemDisplayDateModifiedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum ItemStatus {
        
        /// <remarks/>
        All,
        
        /// <remarks/>
        PendingStart,
        
        /// <remarks/>
        PendingExpiration,
        
        /// <remarks/>
        Approved,
        
        /// <remarks/>
        Expired,
        
        /// <remarks/>
        Submitted,
        
        /// <remarks/>
        CheckedOut,
        
        /// <remarks/>
        CheckedIn,
        
        /// <remarks/>
        PendingDelete,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum CMSContentSubtype {
        
        /// <remarks/>
        AllTypes,
        
        /// <remarks/>
        Content,
        
        /// <remarks/>
        PageBuilderData,
        
        /// <remarks/>
        WebEvent,
        
        /// <remarks/>
        PageBuilderMasterData,
        
        /// <remarks/>
        CTAData,
        
        /// <remarks/>
        LandingPageData,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum TaxonomyItemType {
        
        /// <remarks/>
        Content,
        
        /// <remarks/>
        User,
        
        /// <remarks/>
        Group,
        
        /// <remarks/>
        Blogs,
        
        /// <remarks/>
        Forum,
        
        /// <remarks/>
        UriFavorite,
        
        /// <remarks/>
        Task,
        
        /// <remarks/>
        ActiveContent,
        
        /// <remarks/>
        ArchivedContent,
        
        /// <remarks/>
        Locale,
        
        /// <remarks/>
        FolderChildren,
        
        /// <remarks/>
        FolderDescendants,
        
        /// <remarks/>
        FolderTree,
        
        /// <remarks/>
        MenuTree,
        
        /// <remarks/>
        TaxonomyTree,
        
        /// <remarks/>
        Library,
        
        /// <remarks/>
        ContentHistory,
        
        /// <remarks/>
        OfficeDoc,
        
        /// <remarks/>
        ManagedFiles,
        
        /// <remarks/>
        Assets,
        
        /// <remarks/>
        Images,
        
        /// <remarks/>
        MultiMedia,
        
        /// <remarks/>
        Archive_OfficeDoc,
        
        /// <remarks/>
        Archive_ManagedFiles,
        
        /// <remarks/>
        Archive_Assets,
        
        /// <remarks/>
        Archive_Images,
        
        /// <remarks/>
        Archive_MultiMedia,
        
        /// <remarks/>
        CatalogEntry,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CmsDataOfTaxonomyBaseData))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaxonomyBaseData))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaxonomyData))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public abstract partial class BaseDataOfTaxonomyBaseData {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaxonomyBaseData))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaxonomyData))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public abstract partial class CmsDataOfTaxonomyBaseData : BaseDataOfTaxonomyBaseData {
        
        private long idField;
        
        /// <remarks/>
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaxonomyData))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class TaxonomyBaseData : CmsDataOfTaxonomyBaseData {
        
        private long taxonomyIdField;
        
        private string taxonomyIdPathField;
        
        private string taxonomyNameField;
        
        private string taxonomyImageField;
        
        private string categoryUrlField;
        
        private bool visibleField;
        
        private TaxonomyType taxonomyTypeField;
        
        private int taxonomyLanguageField;
        
        private string taxonomyLanguageNameField;
        
        private string taxonomyDescriptionField;
        
        private long taxonomyParentIdField;
        
        private int taxonomyLevelField;
        
        private string taxonomyPathField;
        
        private System.DateTime taxonomyCreatedDateField;
        
        private int taxonomyItemCountField;
        
        private bool taxonomyHasChildrenField;
        
        private long templateIdField;
        
        private string templateNameField;
        
        private bool templateInheritedField;
        
        private long templateInheritedFromField;
        
        /// <remarks/>
        public long TaxonomyId {
            get {
                return this.taxonomyIdField;
            }
            set {
                this.taxonomyIdField = value;
            }
        }
        
        /// <remarks/>
        public string TaxonomyIdPath {
            get {
                return this.taxonomyIdPathField;
            }
            set {
                this.taxonomyIdPathField = value;
            }
        }
        
        /// <remarks/>
        public string TaxonomyName {
            get {
                return this.taxonomyNameField;
            }
            set {
                this.taxonomyNameField = value;
            }
        }
        
        /// <remarks/>
        public string TaxonomyImage {
            get {
                return this.taxonomyImageField;
            }
            set {
                this.taxonomyImageField = value;
            }
        }
        
        /// <remarks/>
        public string CategoryUrl {
            get {
                return this.categoryUrlField;
            }
            set {
                this.categoryUrlField = value;
            }
        }
        
        /// <remarks/>
        public bool Visible {
            get {
                return this.visibleField;
            }
            set {
                this.visibleField = value;
            }
        }
        
        /// <remarks/>
        public TaxonomyType TaxonomyType {
            get {
                return this.taxonomyTypeField;
            }
            set {
                this.taxonomyTypeField = value;
            }
        }
        
        /// <remarks/>
        public int TaxonomyLanguage {
            get {
                return this.taxonomyLanguageField;
            }
            set {
                this.taxonomyLanguageField = value;
            }
        }
        
        /// <remarks/>
        public string TaxonomyLanguageName {
            get {
                return this.taxonomyLanguageNameField;
            }
            set {
                this.taxonomyLanguageNameField = value;
            }
        }
        
        /// <remarks/>
        public string TaxonomyDescription {
            get {
                return this.taxonomyDescriptionField;
            }
            set {
                this.taxonomyDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public long TaxonomyParentId {
            get {
                return this.taxonomyParentIdField;
            }
            set {
                this.taxonomyParentIdField = value;
            }
        }
        
        /// <remarks/>
        public int TaxonomyLevel {
            get {
                return this.taxonomyLevelField;
            }
            set {
                this.taxonomyLevelField = value;
            }
        }
        
        /// <remarks/>
        public string TaxonomyPath {
            get {
                return this.taxonomyPathField;
            }
            set {
                this.taxonomyPathField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime TaxonomyCreatedDate {
            get {
                return this.taxonomyCreatedDateField;
            }
            set {
                this.taxonomyCreatedDateField = value;
            }
        }
        
        /// <remarks/>
        public int TaxonomyItemCount {
            get {
                return this.taxonomyItemCountField;
            }
            set {
                this.taxonomyItemCountField = value;
            }
        }
        
        /// <remarks/>
        public bool TaxonomyHasChildren {
            get {
                return this.taxonomyHasChildrenField;
            }
            set {
                this.taxonomyHasChildrenField = value;
            }
        }
        
        /// <remarks/>
        public long TemplateId {
            get {
                return this.templateIdField;
            }
            set {
                this.templateIdField = value;
            }
        }
        
        /// <remarks/>
        public string TemplateName {
            get {
                return this.templateNameField;
            }
            set {
                this.templateNameField = value;
            }
        }
        
        /// <remarks/>
        public bool TemplateInherited {
            get {
                return this.templateInheritedField;
            }
            set {
                this.templateInheritedField = value;
            }
        }
        
        /// <remarks/>
        public long TemplateInheritedFrom {
            get {
                return this.templateInheritedFromField;
            }
            set {
                this.templateInheritedFromField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum TaxonomyType {
        
        /// <remarks/>
        Content,
        
        /// <remarks/>
        User,
        
        /// <remarks/>
        Group,
        
        /// <remarks/>
        Locale,
        
        /// <remarks/>
        Undefined,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class TaxonomyData : TaxonomyBaseData {
        
        private TaxonomyConfiguration[] taxonomyConfigurationsField;
        
        private TaxonomyItemData[] taxonomyItemsField;
        
        private TaxonomyData[] taxonomyField;
        
        private long folderIdField;
        
        /// <remarks/>
        public TaxonomyConfiguration[] TaxonomyConfigurations {
            get {
                return this.taxonomyConfigurationsField;
            }
            set {
                this.taxonomyConfigurationsField = value;
            }
        }
        
        /// <remarks/>
        public TaxonomyItemData[] TaxonomyItems {
            get {
                return this.taxonomyItemsField;
            }
            set {
                this.taxonomyItemsField = value;
            }
        }
        
        /// <remarks/>
        public TaxonomyData[] Taxonomy {
            get {
                return this.taxonomyField;
            }
            set {
                this.taxonomyField = value;
            }
        }
        
        /// <remarks/>
        public long FolderId {
            get {
                return this.folderIdField;
            }
            set {
                this.folderIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum TaxonomyConfiguration {
        
        /// <remarks/>
        Content,
        
        /// <remarks/>
        User,
        
        /// <remarks/>
        Group,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SearchCacheData {
        
        private string idField;
        
        private int rankField;
        
        private long sizeField;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int Rank {
            get {
                return this.rankField;
            }
            set {
                this.rankField = value;
            }
        }
        
        /// <remarks/>
        public long Size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SortRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaxonomyBaseRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaxonomySyncRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaxonomyRequest))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PageRequestData {
        
        private int pageSizeField;
        
        private int dMSLastPageIndexField;
        
        private int currentPageField;
        
        private int recordsAffectedField;
        
        private SearchCacheData[] searchResultsField;
        
        /// <remarks/>
        public int PageSize {
            get {
                return this.pageSizeField;
            }
            set {
                this.pageSizeField = value;
            }
        }
        
        /// <remarks/>
        public int DMSLastPageIndex {
            get {
                return this.dMSLastPageIndexField;
            }
            set {
                this.dMSLastPageIndexField = value;
            }
        }
        
        /// <remarks/>
        public int CurrentPage {
            get {
                return this.currentPageField;
            }
            set {
                this.currentPageField = value;
            }
        }
        
        /// <remarks/>
        public int RecordsAffected {
            get {
                return this.recordsAffectedField;
            }
            set {
                this.recordsAffectedField = value;
            }
        }
        
        /// <remarks/>
        public SearchCacheData[] SearchResults {
            get {
                return this.searchResultsField;
            }
            set {
                this.searchResultsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaxonomyBaseRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaxonomySyncRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaxonomyRequest))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SortRequest : PageRequestData {
        
        private string sortOrderField;
        
        private string sortDirectionField;
        
        /// <remarks/>
        public string SortOrder {
            get {
                return this.sortOrderField;
            }
            set {
                this.sortOrderField = value;
            }
        }
        
        /// <remarks/>
        public string SortDirection {
            get {
                return this.sortDirectionField;
            }
            set {
                this.sortDirectionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaxonomySyncRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaxonomyRequest))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class TaxonomyBaseRequest : SortRequest {
        
        private long taxonomyIdField;
        
        private int taxonomyLanguageField;
        
        private TaxonomyType taxonomyTypeField;
        
        /// <remarks/>
        public long TaxonomyId {
            get {
                return this.taxonomyIdField;
            }
            set {
                this.taxonomyIdField = value;
            }
        }
        
        /// <remarks/>
        public int TaxonomyLanguage {
            get {
                return this.taxonomyLanguageField;
            }
            set {
                this.taxonomyLanguageField = value;
            }
        }
        
        /// <remarks/>
        public TaxonomyType TaxonomyType {
            get {
                return this.taxonomyTypeField;
            }
            set {
                this.taxonomyTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class TaxonomySyncRequest : TaxonomyBaseRequest {
        
        private string syncIdListField;
        
        private string syncRecursiveIdListField;
        
        /// <remarks/>
        public string SyncIdList {
            get {
                return this.syncIdListField;
            }
            set {
                this.syncIdListField = value;
            }
        }
        
        /// <remarks/>
        public string SyncRecursiveIdList {
            get {
                return this.syncRecursiveIdListField;
            }
            set {
                this.syncRecursiveIdListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class TaxonomyRequest : TaxonomyBaseRequest {
        
        private string taxonomyPathField;
        
        private string searchTextField;
        
        private bool getAnalyticsDataField;
        
        private string taxonomyIdListField;
        
        private long folderIdField;
        
        private TaxonomyItemType taxonomyItemTypeField;
        
        private bool includeItemsField;
        
        private bool includeDisabledNodeField;
        
        private int depthField;
        
        private bool previewField;
        
        private bool readCountField;
        
        /// <remarks/>
        public string TaxonomyPath {
            get {
                return this.taxonomyPathField;
            }
            set {
                this.taxonomyPathField = value;
            }
        }
        
        /// <remarks/>
        public string SearchText {
            get {
                return this.searchTextField;
            }
            set {
                this.searchTextField = value;
            }
        }
        
        /// <remarks/>
        public bool GetAnalyticsData {
            get {
                return this.getAnalyticsDataField;
            }
            set {
                this.getAnalyticsDataField = value;
            }
        }
        
        /// <remarks/>
        public string TaxonomyIdList {
            get {
                return this.taxonomyIdListField;
            }
            set {
                this.taxonomyIdListField = value;
            }
        }
        
        /// <remarks/>
        public long FolderId {
            get {
                return this.folderIdField;
            }
            set {
                this.folderIdField = value;
            }
        }
        
        /// <remarks/>
        public TaxonomyItemType TaxonomyItemType {
            get {
                return this.taxonomyItemTypeField;
            }
            set {
                this.taxonomyItemTypeField = value;
            }
        }
        
        /// <remarks/>
        public bool IncludeItems {
            get {
                return this.includeItemsField;
            }
            set {
                this.includeItemsField = value;
            }
        }
        
        /// <remarks/>
        public bool IncludeDisabledNode {
            get {
                return this.includeDisabledNodeField;
            }
            set {
                this.includeDisabledNodeField = value;
            }
        }
        
        /// <remarks/>
        public int Depth {
            get {
                return this.depthField;
            }
            set {
                this.depthField = value;
            }
        }
        
        /// <remarks/>
        public bool Preview {
            get {
                return this.previewField;
            }
            set {
                this.previewField = value;
            }
        }
        
        /// <remarks/>
        public bool ReadCount {
            get {
                return this.readCountField;
            }
            set {
                this.readCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/", IsNullable=false)]
    public partial class AuthenticationHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string usernameField;
        
        private string passwordField;
        
        private string domainField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string Domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void LoadTaxonomyCompletedEventHandler(object sender, LoadTaxonomyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadTaxonomyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadTaxonomyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaxonomyData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaxonomyData)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public TaxonomyRequest TaxonomyReq {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaxonomyRequest)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CreateTaxonomyCompletedEventHandler(object sender, CreateTaxonomyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateTaxonomyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateTaxonomyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void UpdateTaxonomyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void DeleteTaxonomyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ReadTaxonomyCompletedEventHandler(object sender, ReadTaxonomyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadTaxonomyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadTaxonomyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaxonomyData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaxonomyData)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public TaxonomyRequest TaxonomyReq {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaxonomyRequest)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void AddTaxonomyItemCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void RemoveTaxonomyItemCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void AddTaxonomySyncFolderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void RemoveTaxonomyFolderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ReadAllAssignedCategoryCompletedEventHandler(object sender, ReadAllAssignedCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadAllAssignedCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadAllAssignedCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaxonomyBaseData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaxonomyBaseData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void AddTaxonomyItem1CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ReOrderTaxonomyItemsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetTaxonomyIdByPathCompletedEventHandler(object sender, GetTaxonomyIdByPathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTaxonomyIdByPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTaxonomyIdByPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591