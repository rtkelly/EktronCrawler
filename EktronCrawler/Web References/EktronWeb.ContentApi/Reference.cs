//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace EktronCrawler.EktronWeb.ContentApi {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ContentSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BaseDataOfTemplateData))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BaseDataOfContentMetaData))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BaseDataOfContentBaseData))]
    public partial class Content : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private AuthenticationHeader authenticationHeaderValueField;
        
        private RequestInfoParameters requestInfoParametersValueField;
        
        private System.Threading.SendOrPostCallback CheckOutContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback CopyContentToFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddContent1OperationCompleted;
        
        private System.Threading.SendOrPostCallback AddContent2OperationCompleted;
        
        private System.Threading.SendOrPostCallback AddContent3OperationCompleted;
        
        private System.Threading.SendOrPostCallback AddContent4OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContentForEditingOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteContentItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAddViewLanguageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllCommentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllTemplatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateContentMetaDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllUnassignedItemApprovalsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChildContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChildContent1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContentByHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContentStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContentStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDomainOperationCompleted;
        
        private System.Threading.SendOrPostCallback MoveContentToFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback PublishContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback RenameContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitForDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback UndoCheckoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback NotifySubscriptionForSynchronizedContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback NotifySubscriptionForSynchronizedContentByTypeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Content() {
            this.Url = global::EktronCrawler.Properties.Settings.Default.EktronCrawler_EktronWeb_ContentApi_Content;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public AuthenticationHeader AuthenticationHeaderValue {
            get {
                return this.authenticationHeaderValueField;
            }
            set {
                this.authenticationHeaderValueField = value;
            }
        }
        
        public RequestInfoParameters RequestInfoParametersValue {
            get {
                return this.requestInfoParametersValueField;
            }
            set {
                this.requestInfoParametersValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CheckOutContentCompletedEventHandler CheckOutContentCompleted;
        
        /// <remarks/>
        public event SaveContentCompletedEventHandler SaveContentCompleted;
        
        /// <remarks/>
        public event CopyContentToFolderCompletedEventHandler CopyContentToFolderCompleted;
        
        /// <remarks/>
        public event AddContentCompletedEventHandler AddContentCompleted;
        
        /// <remarks/>
        public event AddContent1CompletedEventHandler AddContent1Completed;
        
        /// <remarks/>
        public event AddContent2CompletedEventHandler AddContent2Completed;
        
        /// <remarks/>
        public event AddContent3CompletedEventHandler AddContent3Completed;
        
        /// <remarks/>
        public event AddContent4CompletedEventHandler AddContent4Completed;
        
        /// <remarks/>
        public event GetContentForEditingCompletedEventHandler GetContentForEditingCompleted;
        
        /// <remarks/>
        public event DeleteContentItemCompletedEventHandler DeleteContentItemCompleted;
        
        /// <remarks/>
        public event GetAddViewLanguageCompletedEventHandler GetAddViewLanguageCompleted;
        
        /// <remarks/>
        public event GetAllCommentsCompletedEventHandler GetAllCommentsCompleted;
        
        /// <remarks/>
        public event GetAllTemplatesCompletedEventHandler GetAllTemplatesCompleted;
        
        /// <remarks/>
        public event UpdateContentMetaDataCompletedEventHandler UpdateContentMetaDataCompleted;
        
        /// <remarks/>
        public event GetAllUnassignedItemApprovalsCompletedEventHandler GetAllUnassignedItemApprovalsCompleted;
        
        /// <remarks/>
        public event GetChildContentCompletedEventHandler GetChildContentCompleted;
        
        /// <remarks/>
        public event GetChildContent1CompletedEventHandler GetChildContent1Completed;
        
        /// <remarks/>
        public event GetContentCompletedEventHandler GetContentCompleted;
        
        /// <remarks/>
        public event GetContentByHistoryCompletedEventHandler GetContentByHistoryCompleted;
        
        /// <remarks/>
        public event GetContentStateCompletedEventHandler GetContentStateCompleted;
        
        /// <remarks/>
        public event GetContentStatusCompletedEventHandler GetContentStatusCompleted;
        
        /// <remarks/>
        public event GetDomainCompletedEventHandler GetDomainCompleted;
        
        /// <remarks/>
        public event MoveContentToFolderCompletedEventHandler MoveContentToFolderCompleted;
        
        /// <remarks/>
        public event PublishContentCompletedEventHandler PublishContentCompleted;
        
        /// <remarks/>
        public event RenameContentCompletedEventHandler RenameContentCompleted;
        
        /// <remarks/>
        public event SubmitForDeleteCompletedEventHandler SubmitForDeleteCompleted;
        
        /// <remarks/>
        public event UndoCheckoutCompletedEventHandler UndoCheckoutCompleted;
        
        /// <remarks/>
        public event NotifySubscriptionForSynchronizedContentCompletedEventHandler NotifySubscriptionForSynchronizedContentCompleted;
        
        /// <remarks/>
        public event NotifySubscriptionForSynchronizedContentByTypeCompletedEventHandler NotifySubscriptionForSynchronizedContentByTypeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestInfoParametersValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckOutContent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckOutContent(long ContentID) {
            object[] results = this.Invoke("CheckOutContent", new object[] {
                        ContentID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckOutContentAsync(long ContentID) {
            this.CheckOutContentAsync(ContentID, null);
        }
        
        /// <remarks/>
        public void CheckOutContentAsync(long ContentID, object userState) {
            if ((this.CheckOutContentOperationCompleted == null)) {
                this.CheckOutContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckOutContentOperationCompleted);
            }
            this.InvokeAsync("CheckOutContent", new object[] {
                        ContentID}, this.CheckOutContentOperationCompleted, userState);
        }
        
        private void OnCheckOutContentOperationCompleted(object arg) {
            if ((this.CheckOutContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckOutContentCompleted(this, new CheckOutContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestInfoParametersValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveContent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveContent(ContentEditData contentEditData) {
            object[] results = this.Invoke("SaveContent", new object[] {
                        contentEditData});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveContentAsync(ContentEditData contentEditData) {
            this.SaveContentAsync(contentEditData, null);
        }
        
        /// <remarks/>
        public void SaveContentAsync(ContentEditData contentEditData, object userState) {
            if ((this.SaveContentOperationCompleted == null)) {
                this.SaveContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveContentOperationCompleted);
            }
            this.InvokeAsync("SaveContent", new object[] {
                        contentEditData}, this.SaveContentOperationCompleted, userState);
        }
        
        private void OnSaveContentOperationCompleted(object arg) {
            if ((this.SaveContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveContentCompleted(this, new SaveContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestInfoParametersValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CopyContentToFolder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ContentData CopyContentToFolder(string ContentID, long FolderID, string Language, bool Publish) {
            object[] results = this.Invoke("CopyContentToFolder", new object[] {
                        ContentID,
                        FolderID,
                        Language,
                        Publish});
            return ((ContentData)(results[0]));
        }
        
        /// <remarks/>
        public void CopyContentToFolderAsync(string ContentID, long FolderID, string Language, bool Publish) {
            this.CopyContentToFolderAsync(ContentID, FolderID, Language, Publish, null);
        }
        
        /// <remarks/>
        public void CopyContentToFolderAsync(string ContentID, long FolderID, string Language, bool Publish, object userState) {
            if ((this.CopyContentToFolderOperationCompleted == null)) {
                this.CopyContentToFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCopyContentToFolderOperationCompleted);
            }
            this.InvokeAsync("CopyContentToFolder", new object[] {
                        ContentID,
                        FolderID,
                        Language,
                        Publish}, this.CopyContentToFolderOperationCompleted, userState);
        }
        
        private void OnCopyContentToFolderOperationCompleted(object arg) {
            if ((this.CopyContentToFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CopyContentToFolderCompleted(this, new CopyContentToFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestInfoParametersValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddContent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long AddContent(string ContentTitle, string ContentComment, string ContentHtml, string SearchText, string SummaryHtml, string ContentLanguage, long FolderId, object GoLive, object EndDate, string MetaInfoXml) {
            object[] results = this.Invoke("AddContent", new object[] {
                        ContentTitle,
                        ContentComment,
                        ContentHtml,
                        SearchText,
                        SummaryHtml,
                        ContentLanguage,
                        FolderId,
                        GoLive,
                        EndDate,
                        MetaInfoXml});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void AddContentAsync(string ContentTitle, string ContentComment, string ContentHtml, string SearchText, string SummaryHtml, string ContentLanguage, long FolderId, object GoLive, object EndDate, string MetaInfoXml) {
            this.AddContentAsync(ContentTitle, ContentComment, ContentHtml, SearchText, SummaryHtml, ContentLanguage, FolderId, GoLive, EndDate, MetaInfoXml, null);
        }
        
        /// <remarks/>
        public void AddContentAsync(string ContentTitle, string ContentComment, string ContentHtml, string SearchText, string SummaryHtml, string ContentLanguage, long FolderId, object GoLive, object EndDate, string MetaInfoXml, object userState) {
            if ((this.AddContentOperationCompleted == null)) {
                this.AddContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddContentOperationCompleted);
            }
            this.InvokeAsync("AddContent", new object[] {
                        ContentTitle,
                        ContentComment,
                        ContentHtml,
                        SearchText,
                        SummaryHtml,
                        ContentLanguage,
                        FolderId,
                        GoLive,
                        EndDate,
                        MetaInfoXml}, this.AddContentOperationCompleted, userState);
        }
        
        private void OnAddContentOperationCompleted(object arg) {
            if ((this.AddContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddContentCompleted(this, new AddContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestInfoParametersValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="AddContent1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddContentWithUser", RequestElementName="AddContentWithUser", RequestNamespace="http://tempuri.org/", ResponseElementName="AddContentWithUserResponse", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("AddContentWithUserResult")]
        public long AddContent(string Username, string Password, string Domain, string ContentTitle, string ContentComment, string ContentHtml, string SearchText, string SummaryHtml, string ContentLanguage, long FolderId, object GoLive, object EndDate, string MetaInfoXml) {
            object[] results = this.Invoke("AddContent1", new object[] {
                        Username,
                        Password,
                        Domain,
                        ContentTitle,
                        ContentComment,
                        ContentHtml,
                        SearchText,
                        SummaryHtml,
                        ContentLanguage,
                        FolderId,
                        GoLive,
                        EndDate,
                        MetaInfoXml});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void AddContent1Async(string Username, string Password, string Domain, string ContentTitle, string ContentComment, string ContentHtml, string SearchText, string SummaryHtml, string ContentLanguage, long FolderId, object GoLive, object EndDate, string MetaInfoXml) {
            this.AddContent1Async(Username, Password, Domain, ContentTitle, ContentComment, ContentHtml, SearchText, SummaryHtml, ContentLanguage, FolderId, GoLive, EndDate, MetaInfoXml, null);
        }
        
        /// <remarks/>
        public void AddContent1Async(string Username, string Password, string Domain, string ContentTitle, string ContentComment, string ContentHtml, string SearchText, string SummaryHtml, string ContentLanguage, long FolderId, object GoLive, object EndDate, string MetaInfoXml, object userState) {
            if ((this.AddContent1OperationCompleted == null)) {
                this.AddContent1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddContent1OperationCompleted);
            }
            this.InvokeAsync("AddContent1", new object[] {
                        Username,
                        Password,
                        Domain,
                        ContentTitle,
                        ContentComment,
                        ContentHtml,
                        SearchText,
                        SummaryHtml,
                        ContentLanguage,
                        FolderId,
                        GoLive,
                        EndDate,
                        MetaInfoXml}, this.AddContent1OperationCompleted, userState);
        }
        
        private void OnAddContent1OperationCompleted(object arg) {
            if ((this.AddContent1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddContent1Completed(this, new AddContent1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestInfoParametersValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="AddContent2")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddContent With overload Parameter CleanHtml", RequestElementName="AddContent With overload Parameter CleanHtml", RequestNamespace="http://tempuri.org/", ResponseElementName="AddContent With overload Parameter CleanHtmlResponse", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("AddContent With overload Parameter CleanHtmlResult")]
        public long AddContent(string ContentTitle, string ContentComment, string ContentHtml, string SearchText, string SummaryHtml, string ContentLanguage, long FolderId, object GoLive, object EndDate, string MetaInfoXml, bool CleanHtml) {
            object[] results = this.Invoke("AddContent2", new object[] {
                        ContentTitle,
                        ContentComment,
                        ContentHtml,
                        SearchText,
                        SummaryHtml,
                        ContentLanguage,
                        FolderId,
                        GoLive,
                        EndDate,
                        MetaInfoXml,
                        CleanHtml});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void AddContent2Async(string ContentTitle, string ContentComment, string ContentHtml, string SearchText, string SummaryHtml, string ContentLanguage, long FolderId, object GoLive, object EndDate, string MetaInfoXml, bool CleanHtml) {
            this.AddContent2Async(ContentTitle, ContentComment, ContentHtml, SearchText, SummaryHtml, ContentLanguage, FolderId, GoLive, EndDate, MetaInfoXml, CleanHtml, null);
        }
        
        /// <remarks/>
        public void AddContent2Async(string ContentTitle, string ContentComment, string ContentHtml, string SearchText, string SummaryHtml, string ContentLanguage, long FolderId, object GoLive, object EndDate, string MetaInfoXml, bool CleanHtml, object userState) {
            if ((this.AddContent2OperationCompleted == null)) {
                this.AddContent2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddContent2OperationCompleted);
            }
            this.InvokeAsync("AddContent2", new object[] {
                        ContentTitle,
                        ContentComment,
                        ContentHtml,
                        SearchText,
                        SummaryHtml,
                        ContentLanguage,
                        FolderId,
                        GoLive,
                        EndDate,
                        MetaInfoXml,
                        CleanHtml}, this.AddContent2OperationCompleted, userState);
        }
        
        private void OnAddContent2OperationCompleted(object arg) {
            if ((this.AddContent2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddContent2Completed(this, new AddContent2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestInfoParametersValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="AddContent3")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddContent With ContentID", RequestElementName="AddContent With ContentID", RequestNamespace="http://tempuri.org/", ResponseElementName="AddContent With ContentIDResponse", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("AddContent With ContentIDResult")]
        public long AddContent(string ContentTitle, string ContentComment, string ContentHtml, string SearchText, string SummaryHtml, string ContentLanguage, long FolderId, object GoLive, object EndDate, string MetaInfoXml, long ContentID) {
            object[] results = this.Invoke("AddContent3", new object[] {
                        ContentTitle,
                        ContentComment,
                        ContentHtml,
                        SearchText,
                        SummaryHtml,
                        ContentLanguage,
                        FolderId,
                        GoLive,
                        EndDate,
                        MetaInfoXml,
                        ContentID});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void AddContent3Async(string ContentTitle, string ContentComment, string ContentHtml, string SearchText, string SummaryHtml, string ContentLanguage, long FolderId, object GoLive, object EndDate, string MetaInfoXml, long ContentID) {
            this.AddContent3Async(ContentTitle, ContentComment, ContentHtml, SearchText, SummaryHtml, ContentLanguage, FolderId, GoLive, EndDate, MetaInfoXml, ContentID, null);
        }
        
        /// <remarks/>
        public void AddContent3Async(string ContentTitle, string ContentComment, string ContentHtml, string SearchText, string SummaryHtml, string ContentLanguage, long FolderId, object GoLive, object EndDate, string MetaInfoXml, long ContentID, object userState) {
            if ((this.AddContent3OperationCompleted == null)) {
                this.AddContent3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddContent3OperationCompleted);
            }
            this.InvokeAsync("AddContent3", new object[] {
                        ContentTitle,
                        ContentComment,
                        ContentHtml,
                        SearchText,
                        SummaryHtml,
                        ContentLanguage,
                        FolderId,
                        GoLive,
                        EndDate,
                        MetaInfoXml,
                        ContentID}, this.AddContent3OperationCompleted, userState);
        }
        
        private void OnAddContent3OperationCompleted(object arg) {
            if ((this.AddContent3Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddContent3Completed(this, new AddContent3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestInfoParametersValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="AddContent4")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddContent with XmlID and TemplateID", RequestElementName="AddContent with XmlID and TemplateID", RequestNamespace="http://tempuri.org/", ResponseElementName="AddContent with XmlID and TemplateIDResponse", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("AddContent with XmlID and TemplateIDResult")]
        public long AddContent(string ContentTitle, string ContentComment, string ContentHtml, string SearchText, string SummaryHtml, string ContentLanguage, long FolderId, object GoLive, object EndDate, string MetaInfoXml, long XmlId, long TemplateID) {
            object[] results = this.Invoke("AddContent4", new object[] {
                        ContentTitle,
                        ContentComment,
                        ContentHtml,
                        SearchText,
                        SummaryHtml,
                        ContentLanguage,
                        FolderId,
                        GoLive,
                        EndDate,
                        MetaInfoXml,
                        XmlId,
                        TemplateID});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void AddContent4Async(string ContentTitle, string ContentComment, string ContentHtml, string SearchText, string SummaryHtml, string ContentLanguage, long FolderId, object GoLive, object EndDate, string MetaInfoXml, long XmlId, long TemplateID) {
            this.AddContent4Async(ContentTitle, ContentComment, ContentHtml, SearchText, SummaryHtml, ContentLanguage, FolderId, GoLive, EndDate, MetaInfoXml, XmlId, TemplateID, null);
        }
        
        /// <remarks/>
        public void AddContent4Async(string ContentTitle, string ContentComment, string ContentHtml, string SearchText, string SummaryHtml, string ContentLanguage, long FolderId, object GoLive, object EndDate, string MetaInfoXml, long XmlId, long TemplateID, object userState) {
            if ((this.AddContent4OperationCompleted == null)) {
                this.AddContent4OperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddContent4OperationCompleted);
            }
            this.InvokeAsync("AddContent4", new object[] {
                        ContentTitle,
                        ContentComment,
                        ContentHtml,
                        SearchText,
                        SummaryHtml,
                        ContentLanguage,
                        FolderId,
                        GoLive,
                        EndDate,
                        MetaInfoXml,
                        XmlId,
                        TemplateID}, this.AddContent4OperationCompleted, userState);
        }
        
        private void OnAddContent4OperationCompleted(object arg) {
            if ((this.AddContent4Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddContent4Completed(this, new AddContent4CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestInfoParametersValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetContentForEditing", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ContentEditData GetContentForEditing(long ContentID) {
            object[] results = this.Invoke("GetContentForEditing", new object[] {
                        ContentID});
            return ((ContentEditData)(results[0]));
        }
        
        /// <remarks/>
        public void GetContentForEditingAsync(long ContentID) {
            this.GetContentForEditingAsync(ContentID, null);
        }
        
        /// <remarks/>
        public void GetContentForEditingAsync(long ContentID, object userState) {
            if ((this.GetContentForEditingOperationCompleted == null)) {
                this.GetContentForEditingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContentForEditingOperationCompleted);
            }
            this.InvokeAsync("GetContentForEditing", new object[] {
                        ContentID}, this.GetContentForEditingOperationCompleted, userState);
        }
        
        private void OnGetContentForEditingOperationCompleted(object arg) {
            if ((this.GetContentForEditingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContentForEditingCompleted(this, new GetContentForEditingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestInfoParametersValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteContentItem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteContentItem(long ContentID) {
            object[] results = this.Invoke("DeleteContentItem", new object[] {
                        ContentID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteContentItemAsync(long ContentID) {
            this.DeleteContentItemAsync(ContentID, null);
        }
        
        /// <remarks/>
        public void DeleteContentItemAsync(long ContentID, object userState) {
            if ((this.DeleteContentItemOperationCompleted == null)) {
                this.DeleteContentItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteContentItemOperationCompleted);
            }
            this.InvokeAsync("DeleteContentItem", new object[] {
                        ContentID}, this.DeleteContentItemOperationCompleted, userState);
        }
        
        private void OnDeleteContentItemOperationCompleted(object arg) {
            if ((this.DeleteContentItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteContentItemCompleted(this, new DeleteContentItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestInfoParametersValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAddViewLanguage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LanguageData[] GetAddViewLanguage(long ContentID) {
            object[] results = this.Invoke("GetAddViewLanguage", new object[] {
                        ContentID});
            return ((LanguageData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAddViewLanguageAsync(long ContentID) {
            this.GetAddViewLanguageAsync(ContentID, null);
        }
        
        /// <remarks/>
        public void GetAddViewLanguageAsync(long ContentID, object userState) {
            if ((this.GetAddViewLanguageOperationCompleted == null)) {
                this.GetAddViewLanguageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAddViewLanguageOperationCompleted);
            }
            this.InvokeAsync("GetAddViewLanguage", new object[] {
                        ContentID}, this.GetAddViewLanguageOperationCompleted, userState);
        }
        
        private void OnGetAddViewLanguageOperationCompleted(object arg) {
            if ((this.GetAddViewLanguageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAddViewLanguageCompleted(this, new GetAddViewLanguageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestInfoParametersValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllComments", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CommentData[] GetAllComments(long KeyID, long CommentID, long RefID, string RefType, long UserID, string OrderBy) {
            object[] results = this.Invoke("GetAllComments", new object[] {
                        KeyID,
                        CommentID,
                        RefID,
                        RefType,
                        UserID,
                        OrderBy});
            return ((CommentData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllCommentsAsync(long KeyID, long CommentID, long RefID, string RefType, long UserID, string OrderBy) {
            this.GetAllCommentsAsync(KeyID, CommentID, RefID, RefType, UserID, OrderBy, null);
        }
        
        /// <remarks/>
        public void GetAllCommentsAsync(long KeyID, long CommentID, long RefID, string RefType, long UserID, string OrderBy, object userState) {
            if ((this.GetAllCommentsOperationCompleted == null)) {
                this.GetAllCommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllCommentsOperationCompleted);
            }
            this.InvokeAsync("GetAllComments", new object[] {
                        KeyID,
                        CommentID,
                        RefID,
                        RefType,
                        UserID,
                        OrderBy}, this.GetAllCommentsOperationCompleted, userState);
        }
        
        private void OnGetAllCommentsOperationCompleted(object arg) {
            if ((this.GetAllCommentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllCommentsCompleted(this, new GetAllCommentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestInfoParametersValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllTemplates", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TemplateData[] GetAllTemplates(string OrderBy) {
            object[] results = this.Invoke("GetAllTemplates", new object[] {
                        OrderBy});
            return ((TemplateData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllTemplatesAsync(string OrderBy) {
            this.GetAllTemplatesAsync(OrderBy, null);
        }
        
        /// <remarks/>
        public void GetAllTemplatesAsync(string OrderBy, object userState) {
            if ((this.GetAllTemplatesOperationCompleted == null)) {
                this.GetAllTemplatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllTemplatesOperationCompleted);
            }
            this.InvokeAsync("GetAllTemplates", new object[] {
                        OrderBy}, this.GetAllTemplatesOperationCompleted, userState);
        }
        
        private void OnGetAllTemplatesOperationCompleted(object arg) {
            if ((this.GetAllTemplatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllTemplatesCompleted(this, new GetAllTemplatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestInfoParametersValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateContentMetaData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateContentMetaData(long ContentID, long MetaDataTypeID, string MetaDataText) {
            object[] results = this.Invoke("UpdateContentMetaData", new object[] {
                        ContentID,
                        MetaDataTypeID,
                        MetaDataText});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateContentMetaDataAsync(long ContentID, long MetaDataTypeID, string MetaDataText) {
            this.UpdateContentMetaDataAsync(ContentID, MetaDataTypeID, MetaDataText, null);
        }
        
        /// <remarks/>
        public void UpdateContentMetaDataAsync(long ContentID, long MetaDataTypeID, string MetaDataText, object userState) {
            if ((this.UpdateContentMetaDataOperationCompleted == null)) {
                this.UpdateContentMetaDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateContentMetaDataOperationCompleted);
            }
            this.InvokeAsync("UpdateContentMetaData", new object[] {
                        ContentID,
                        MetaDataTypeID,
                        MetaDataText}, this.UpdateContentMetaDataOperationCompleted, userState);
        }
        
        private void OnUpdateContentMetaDataOperationCompleted(object arg) {
            if ((this.UpdateContentMetaDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateContentMetaDataCompleted(this, new UpdateContentMetaDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestInfoParametersValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllUnassignedItemApprovals", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ApprovalData[] GetAllUnassignedItemApprovals(long ContentID, string ItemType) {
            object[] results = this.Invoke("GetAllUnassignedItemApprovals", new object[] {
                        ContentID,
                        ItemType});
            return ((ApprovalData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllUnassignedItemApprovalsAsync(long ContentID, string ItemType) {
            this.GetAllUnassignedItemApprovalsAsync(ContentID, ItemType, null);
        }
        
        /// <remarks/>
        public void GetAllUnassignedItemApprovalsAsync(long ContentID, string ItemType, object userState) {
            if ((this.GetAllUnassignedItemApprovalsOperationCompleted == null)) {
                this.GetAllUnassignedItemApprovalsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllUnassignedItemApprovalsOperationCompleted);
            }
            this.InvokeAsync("GetAllUnassignedItemApprovals", new object[] {
                        ContentID,
                        ItemType}, this.GetAllUnassignedItemApprovalsOperationCompleted, userState);
        }
        
        private void OnGetAllUnassignedItemApprovalsOperationCompleted(object arg) {
            if ((this.GetAllUnassignedItemApprovalsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllUnassignedItemApprovalsCompleted(this, new GetAllUnassignedItemApprovalsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestInfoParametersValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetChildContent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ContentData[] GetChildContent(long FolderID, bool Recursive, string OrderBy) {
            object[] results = this.Invoke("GetChildContent", new object[] {
                        FolderID,
                        Recursive,
                        OrderBy});
            return ((ContentData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetChildContentAsync(long FolderID, bool Recursive, string OrderBy) {
            this.GetChildContentAsync(FolderID, Recursive, OrderBy, null);
        }
        
        /// <remarks/>
        public void GetChildContentAsync(long FolderID, bool Recursive, string OrderBy, object userState) {
            if ((this.GetChildContentOperationCompleted == null)) {
                this.GetChildContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChildContentOperationCompleted);
            }
            this.InvokeAsync("GetChildContent", new object[] {
                        FolderID,
                        Recursive,
                        OrderBy}, this.GetChildContentOperationCompleted, userState);
        }
        
        private void OnGetChildContentOperationCompleted(object arg) {
            if ((this.GetChildContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChildContentCompleted(this, new GetChildContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestInfoParametersValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.WebMethodAttribute(MessageName="GetChildContent1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetChildContentWithPaging", RequestElementName="GetChildContentWithPaging", RequestNamespace="http://tempuri.org/", ResponseElementName="GetChildContentWithPagingResponse", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("GetChildContentWithPagingResult")]
        public ContentData[] GetChildContent(long FolderID, bool Recursive, string OrderBy, PagingInfo pagingInfo) {
            object[] results = this.Invoke("GetChildContent1", new object[] {
                        FolderID,
                        Recursive,
                        OrderBy,
                        pagingInfo});
            return ((ContentData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetChildContent1Async(long FolderID, bool Recursive, string OrderBy, PagingInfo pagingInfo) {
            this.GetChildContent1Async(FolderID, Recursive, OrderBy, pagingInfo, null);
        }
        
        /// <remarks/>
        public void GetChildContent1Async(long FolderID, bool Recursive, string OrderBy, PagingInfo pagingInfo, object userState) {
            if ((this.GetChildContent1OperationCompleted == null)) {
                this.GetChildContent1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChildContent1OperationCompleted);
            }
            this.InvokeAsync("GetChildContent1", new object[] {
                        FolderID,
                        Recursive,
                        OrderBy,
                        pagingInfo}, this.GetChildContent1OperationCompleted, userState);
        }
        
        private void OnGetChildContent1OperationCompleted(object arg) {
            if ((this.GetChildContent1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChildContent1Completed(this, new GetChildContent1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestInfoParametersValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetContent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ContentData GetContent(long ContentID, ContentResultType ResultType) {
            object[] results = this.Invoke("GetContent", new object[] {
                        ContentID,
                        ResultType});
            return ((ContentData)(results[0]));
        }
        
        /// <remarks/>
        public void GetContentAsync(long ContentID, ContentResultType ResultType) {
            this.GetContentAsync(ContentID, ResultType, null);
        }
        
        /// <remarks/>
        public void GetContentAsync(long ContentID, ContentResultType ResultType, object userState) {
            if ((this.GetContentOperationCompleted == null)) {
                this.GetContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContentOperationCompleted);
            }
            this.InvokeAsync("GetContent", new object[] {
                        ContentID,
                        ResultType}, this.GetContentOperationCompleted, userState);
        }
        
        private void OnGetContentOperationCompleted(object arg) {
            if ((this.GetContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContentCompleted(this, new GetContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestInfoParametersValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetContentByHistory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ContentData GetContentByHistory(long HistoryID) {
            object[] results = this.Invoke("GetContentByHistory", new object[] {
                        HistoryID});
            return ((ContentData)(results[0]));
        }
        
        /// <remarks/>
        public void GetContentByHistoryAsync(long HistoryID) {
            this.GetContentByHistoryAsync(HistoryID, null);
        }
        
        /// <remarks/>
        public void GetContentByHistoryAsync(long HistoryID, object userState) {
            if ((this.GetContentByHistoryOperationCompleted == null)) {
                this.GetContentByHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContentByHistoryOperationCompleted);
            }
            this.InvokeAsync("GetContentByHistory", new object[] {
                        HistoryID}, this.GetContentByHistoryOperationCompleted, userState);
        }
        
        private void OnGetContentByHistoryOperationCompleted(object arg) {
            if ((this.GetContentByHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContentByHistoryCompleted(this, new GetContentByHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestInfoParametersValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetContentState", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ContentStateData GetContentState(long ContentID) {
            object[] results = this.Invoke("GetContentState", new object[] {
                        ContentID});
            return ((ContentStateData)(results[0]));
        }
        
        /// <remarks/>
        public void GetContentStateAsync(long ContentID) {
            this.GetContentStateAsync(ContentID, null);
        }
        
        /// <remarks/>
        public void GetContentStateAsync(long ContentID, object userState) {
            if ((this.GetContentStateOperationCompleted == null)) {
                this.GetContentStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContentStateOperationCompleted);
            }
            this.InvokeAsync("GetContentState", new object[] {
                        ContentID}, this.GetContentStateOperationCompleted, userState);
        }
        
        private void OnGetContentStateOperationCompleted(object arg) {
            if ((this.GetContentStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContentStateCompleted(this, new GetContentStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestInfoParametersValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetContentStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetContentStatus(long ContentID) {
            object[] results = this.Invoke("GetContentStatus", new object[] {
                        ContentID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetContentStatusAsync(long ContentID) {
            this.GetContentStatusAsync(ContentID, null);
        }
        
        /// <remarks/>
        public void GetContentStatusAsync(long ContentID, object userState) {
            if ((this.GetContentStatusOperationCompleted == null)) {
                this.GetContentStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContentStatusOperationCompleted);
            }
            this.InvokeAsync("GetContentStatus", new object[] {
                        ContentID}, this.GetContentStatusOperationCompleted, userState);
        }
        
        private void OnGetContentStatusOperationCompleted(object arg) {
            if ((this.GetContentStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContentStatusCompleted(this, new GetContentStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestInfoParametersValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDomain", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDomain(long ContentID) {
            object[] results = this.Invoke("GetDomain", new object[] {
                        ContentID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDomainAsync(long ContentID) {
            this.GetDomainAsync(ContentID, null);
        }
        
        /// <remarks/>
        public void GetDomainAsync(long ContentID, object userState) {
            if ((this.GetDomainOperationCompleted == null)) {
                this.GetDomainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDomainOperationCompleted);
            }
            this.InvokeAsync("GetDomain", new object[] {
                        ContentID}, this.GetDomainOperationCompleted, userState);
        }
        
        private void OnGetDomainOperationCompleted(object arg) {
            if ((this.GetDomainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDomainCompleted(this, new GetDomainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestInfoParametersValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MoveContentToFolder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ContentData MoveContentToFolder(string ContentID, string ContentLanguage, long FolderID) {
            object[] results = this.Invoke("MoveContentToFolder", new object[] {
                        ContentID,
                        ContentLanguage,
                        FolderID});
            return ((ContentData)(results[0]));
        }
        
        /// <remarks/>
        public void MoveContentToFolderAsync(string ContentID, string ContentLanguage, long FolderID) {
            this.MoveContentToFolderAsync(ContentID, ContentLanguage, FolderID, null);
        }
        
        /// <remarks/>
        public void MoveContentToFolderAsync(string ContentID, string ContentLanguage, long FolderID, object userState) {
            if ((this.MoveContentToFolderOperationCompleted == null)) {
                this.MoveContentToFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMoveContentToFolderOperationCompleted);
            }
            this.InvokeAsync("MoveContentToFolder", new object[] {
                        ContentID,
                        ContentLanguage,
                        FolderID}, this.MoveContentToFolderOperationCompleted, userState);
        }
        
        private void OnMoveContentToFolderOperationCompleted(object arg) {
            if ((this.MoveContentToFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MoveContentToFolderCompleted(this, new MoveContentToFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestInfoParametersValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PublishContent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool PublishContent(long ContentID, long FolderID, int ContentLanguage, string DontCreateTask, long UserID, string TaskTitle) {
            object[] results = this.Invoke("PublishContent", new object[] {
                        ContentID,
                        FolderID,
                        ContentLanguage,
                        DontCreateTask,
                        UserID,
                        TaskTitle});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void PublishContentAsync(long ContentID, long FolderID, int ContentLanguage, string DontCreateTask, long UserID, string TaskTitle) {
            this.PublishContentAsync(ContentID, FolderID, ContentLanguage, DontCreateTask, UserID, TaskTitle, null);
        }
        
        /// <remarks/>
        public void PublishContentAsync(long ContentID, long FolderID, int ContentLanguage, string DontCreateTask, long UserID, string TaskTitle, object userState) {
            if ((this.PublishContentOperationCompleted == null)) {
                this.PublishContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPublishContentOperationCompleted);
            }
            this.InvokeAsync("PublishContent", new object[] {
                        ContentID,
                        FolderID,
                        ContentLanguage,
                        DontCreateTask,
                        UserID,
                        TaskTitle}, this.PublishContentOperationCompleted, userState);
        }
        
        private void OnPublishContentOperationCompleted(object arg) {
            if ((this.PublishContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PublishContentCompleted(this, new PublishContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestInfoParametersValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RenameContent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ContentData RenameContent(long ContentID, string Title) {
            object[] results = this.Invoke("RenameContent", new object[] {
                        ContentID,
                        Title});
            return ((ContentData)(results[0]));
        }
        
        /// <remarks/>
        public void RenameContentAsync(long ContentID, string Title) {
            this.RenameContentAsync(ContentID, Title, null);
        }
        
        /// <remarks/>
        public void RenameContentAsync(long ContentID, string Title, object userState) {
            if ((this.RenameContentOperationCompleted == null)) {
                this.RenameContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRenameContentOperationCompleted);
            }
            this.InvokeAsync("RenameContent", new object[] {
                        ContentID,
                        Title}, this.RenameContentOperationCompleted, userState);
        }
        
        private void OnRenameContentOperationCompleted(object arg) {
            if ((this.RenameContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RenameContentCompleted(this, new RenameContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestInfoParametersValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SubmitForDelete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SubmitForDelete(long ContentID, long FolderID) {
            object[] results = this.Invoke("SubmitForDelete", new object[] {
                        ContentID,
                        FolderID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitForDeleteAsync(long ContentID, long FolderID) {
            this.SubmitForDeleteAsync(ContentID, FolderID, null);
        }
        
        /// <remarks/>
        public void SubmitForDeleteAsync(long ContentID, long FolderID, object userState) {
            if ((this.SubmitForDeleteOperationCompleted == null)) {
                this.SubmitForDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitForDeleteOperationCompleted);
            }
            this.InvokeAsync("SubmitForDelete", new object[] {
                        ContentID,
                        FolderID}, this.SubmitForDeleteOperationCompleted, userState);
        }
        
        private void OnSubmitForDeleteOperationCompleted(object arg) {
            if ((this.SubmitForDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitForDeleteCompleted(this, new SubmitForDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestInfoParametersValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UndoCheckout", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UndoCheckout(long ContentID) {
            object[] results = this.Invoke("UndoCheckout", new object[] {
                        ContentID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UndoCheckoutAsync(long ContentID) {
            this.UndoCheckoutAsync(ContentID, null);
        }
        
        /// <remarks/>
        public void UndoCheckoutAsync(long ContentID, object userState) {
            if ((this.UndoCheckoutOperationCompleted == null)) {
                this.UndoCheckoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUndoCheckoutOperationCompleted);
            }
            this.InvokeAsync("UndoCheckout", new object[] {
                        ContentID}, this.UndoCheckoutOperationCompleted, userState);
        }
        
        private void OnUndoCheckoutOperationCompleted(object arg) {
            if ((this.UndoCheckoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UndoCheckoutCompleted(this, new UndoCheckoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestInfoParametersValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NotifySubscriptionForSynchronizedContent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void NotifySubscriptionForSynchronizedContent(long startVersion) {
            this.Invoke("NotifySubscriptionForSynchronizedContent", new object[] {
                        startVersion});
        }
        
        /// <remarks/>
        public void NotifySubscriptionForSynchronizedContentAsync(long startVersion) {
            this.NotifySubscriptionForSynchronizedContentAsync(startVersion, null);
        }
        
        /// <remarks/>
        public void NotifySubscriptionForSynchronizedContentAsync(long startVersion, object userState) {
            if ((this.NotifySubscriptionForSynchronizedContentOperationCompleted == null)) {
                this.NotifySubscriptionForSynchronizedContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotifySubscriptionForSynchronizedContentOperationCompleted);
            }
            this.InvokeAsync("NotifySubscriptionForSynchronizedContent", new object[] {
                        startVersion}, this.NotifySubscriptionForSynchronizedContentOperationCompleted, userState);
        }
        
        private void OnNotifySubscriptionForSynchronizedContentOperationCompleted(object arg) {
            if ((this.NotifySubscriptionForSynchronizedContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NotifySubscriptionForSynchronizedContentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("RequestInfoParametersValue")]
        [System.Web.Services.Protocols.SoapHeaderAttribute("AuthenticationHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NotifySubscriptionForSynchronizedContentByType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void NotifySubscriptionForSynchronizedContentByType(long startVersion, int syncType) {
            this.Invoke("NotifySubscriptionForSynchronizedContentByType", new object[] {
                        startVersion,
                        syncType});
        }
        
        /// <remarks/>
        public void NotifySubscriptionForSynchronizedContentByTypeAsync(long startVersion, int syncType) {
            this.NotifySubscriptionForSynchronizedContentByTypeAsync(startVersion, syncType, null);
        }
        
        /// <remarks/>
        public void NotifySubscriptionForSynchronizedContentByTypeAsync(long startVersion, int syncType, object userState) {
            if ((this.NotifySubscriptionForSynchronizedContentByTypeOperationCompleted == null)) {
                this.NotifySubscriptionForSynchronizedContentByTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotifySubscriptionForSynchronizedContentByTypeOperationCompleted);
            }
            this.InvokeAsync("NotifySubscriptionForSynchronizedContentByType", new object[] {
                        startVersion,
                        syncType}, this.NotifySubscriptionForSynchronizedContentByTypeOperationCompleted, userState);
        }
        
        private void OnNotifySubscriptionForSynchronizedContentByTypeOperationCompleted(object arg) {
            if ((this.NotifySubscriptionForSynchronizedContentByTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NotifySubscriptionForSynchronizedContentByTypeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/", IsNullable=false)]
    public partial class RequestInfoParameters : System.Web.Services.Protocols.SoapHeader {
        
        private int contentLanguageField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public int ContentLanguage {
            get {
                return this.contentLanguageField;
            }
            set {
                this.contentLanguageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PagingInfo {
        
        private int recordsPerPageField;
        
        private int currentPageField;
        
        private int totalPagesField;
        
        private int totalRecordsField;
        
        /// <remarks/>
        public int RecordsPerPage {
            get {
                return this.recordsPerPageField;
            }
            set {
                this.recordsPerPageField = value;
            }
        }
        
        /// <remarks/>
        public int CurrentPage {
            get {
                return this.currentPageField;
            }
            set {
                this.currentPageField = value;
            }
        }
        
        /// <remarks/>
        public int TotalPages {
            get {
                return this.totalPagesField;
            }
            set {
                this.totalPagesField = value;
            }
        }
        
        /// <remarks/>
        public int TotalRecords {
            get {
                return this.totalRecordsField;
            }
            set {
                this.totalRecordsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ApprovalData {
        
        private long userIdField;
        
        private long groupIdField;
        
        private string userNameField;
        
        private string groupNameField;
        
        private string displayUserNameField;
        
        private string displayUserGroupNameField;
        
        private string userDomainField;
        
        private string userGroupDomainField;
        
        private string typeField;
        
        private bool isCurrentApproverField;
        
        private object legacyDataField;
        
        /// <remarks/>
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public long GroupId {
            get {
                return this.groupIdField;
            }
            set {
                this.groupIdField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string GroupName {
            get {
                return this.groupNameField;
            }
            set {
                this.groupNameField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayUserName {
            get {
                return this.displayUserNameField;
            }
            set {
                this.displayUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayUserGroupName {
            get {
                return this.displayUserGroupNameField;
            }
            set {
                this.displayUserGroupNameField = value;
            }
        }
        
        /// <remarks/>
        public string UserDomain {
            get {
                return this.userDomainField;
            }
            set {
                this.userDomainField = value;
            }
        }
        
        /// <remarks/>
        public string UserGroupDomain {
            get {
                return this.userGroupDomainField;
            }
            set {
                this.userGroupDomainField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public bool IsCurrentApprover {
            get {
                return this.isCurrentApproverField;
            }
            set {
                this.isCurrentApproverField = value;
            }
        }
        
        /// <remarks/>
        public object LegacyData {
            get {
                return this.legacyDataField;
            }
            set {
                this.legacyDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CommentData {
        
        private long commentKeyIdField;
        
        private long commentIdField;
        
        private long refIdField;
        
        private int languageField;
        
        private string commentTextField;
        
        private long userIdField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string dateModifiedField;
        
        private string dateCreatedField;
        
        /// <remarks/>
        public long CommentKeyId {
            get {
                return this.commentKeyIdField;
            }
            set {
                this.commentKeyIdField = value;
            }
        }
        
        /// <remarks/>
        public long CommentId {
            get {
                return this.commentIdField;
            }
            set {
                this.commentIdField = value;
            }
        }
        
        /// <remarks/>
        public long RefId {
            get {
                return this.refIdField;
            }
            set {
                this.refIdField = value;
            }
        }
        
        /// <remarks/>
        public int Language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
        
        /// <remarks/>
        public string CommentText {
            get {
                return this.commentTextField;
            }
            set {
                this.commentTextField = value;
            }
        }
        
        /// <remarks/>
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string DateModified {
            get {
                return this.dateModifiedField;
            }
            set {
                this.dateModifiedField = value;
            }
        }
        
        /// <remarks/>
        public string DateCreated {
            get {
                return this.dateCreatedField;
            }
            set {
                this.dateCreatedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class LanguageData {
        
        private int idField;
        
        private int activatedField;
        
        private string typeField;
        
        private string nameField;
        
        private string imagePathField;
        
        private string charSetField;
        
        private string browserCodeField;
        
        private string directionField;
        
        private string flagFileField;
        
        private string xmlLangField;
        
        private bool siteEnabledField;
        
        private string localNameField;
        
        private object legacyDataField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int Activated {
            get {
                return this.activatedField;
            }
            set {
                this.activatedField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string ImagePath {
            get {
                return this.imagePathField;
            }
            set {
                this.imagePathField = value;
            }
        }
        
        /// <remarks/>
        public string CharSet {
            get {
                return this.charSetField;
            }
            set {
                this.charSetField = value;
            }
        }
        
        /// <remarks/>
        public string BrowserCode {
            get {
                return this.browserCodeField;
            }
            set {
                this.browserCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Direction {
            get {
                return this.directionField;
            }
            set {
                this.directionField = value;
            }
        }
        
        /// <remarks/>
        public string FlagFile {
            get {
                return this.flagFileField;
            }
            set {
                this.flagFileField = value;
            }
        }
        
        /// <remarks/>
        public string XmlLang {
            get {
                return this.xmlLangField;
            }
            set {
                this.xmlLangField = value;
            }
        }
        
        /// <remarks/>
        public bool SiteEnabled {
            get {
                return this.siteEnabledField;
            }
            set {
                this.siteEnabledField = value;
            }
        }
        
        /// <remarks/>
        public string LocalName {
            get {
                return this.localNameField;
            }
            set {
                this.localNameField = value;
            }
        }
        
        /// <remarks/>
        public object LegacyData {
            get {
                return this.legacyDataField;
            }
            set {
                this.legacyDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CmsDataOfTemplateData))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TemplateData))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public abstract partial class BaseDataOfTemplateData {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TemplateData))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public abstract partial class CmsDataOfTemplateData : BaseDataOfTemplateData {
        
        private long idField;
        
        /// <remarks/>
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class TemplateData : CmsDataOfTemplateData {
        
        private string templateNameField;
        
        private string fileNameField;
        
        private TemplateType typeField;
        
        private TemplateSubType subTypeField;
        
        private string thumbnailField;
        
        private string descriptionField;
        
        private long masterLayoutIDField;
        
        private bool isToolbarEnabledField;
        
        /// <remarks/>
        public string TemplateName {
            get {
                return this.templateNameField;
            }
            set {
                this.templateNameField = value;
            }
        }
        
        /// <remarks/>
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        public TemplateType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public TemplateSubType SubType {
            get {
                return this.subTypeField;
            }
            set {
                this.subTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Thumbnail {
            get {
                return this.thumbnailField;
            }
            set {
                this.thumbnailField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public long MasterLayoutID {
            get {
                return this.masterLayoutIDField;
            }
            set {
                this.masterLayoutIDField = value;
            }
        }
        
        /// <remarks/>
        public bool IsToolbarEnabled {
            get {
                return this.isToolbarEnabledField;
            }
            set {
                this.isToolbarEnabledField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum TemplateType {
        
        /// <remarks/>
        Default,
        
        /// <remarks/>
        User,
        
        /// <remarks/>
        Group,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum TemplateSubType {
        
        /// <remarks/>
        Default,
        
        /// <remarks/>
        Workspace,
        
        /// <remarks/>
        Photos,
        
        /// <remarks/>
        Blog,
        
        /// <remarks/>
        Wireframes,
        
        /// <remarks/>
        Profile,
        
        /// <remarks/>
        Calendar,
        
        /// <remarks/>
        Forum,
        
        /// <remarks/>
        MasterLayout,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class XmlConfigData {
        
        private long idField;
        
        private string titleField;
        
        private string descriptionField;
        
        private string editXsltField;
        
        private string saveXsltField;
        
        private string xslt1Field;
        
        private string xslt2Field;
        
        private string xslt3Field;
        
        private string xslt4Field;
        
        private string xslt5Field;
        
        private string xmlSchemaField;
        
        private string xmlNameSpaceField;
        
        private string xmlAdvConfigField;
        
        private string dateCreatedField;
        
        private string displayDateCreatedField;
        
        private System.DateTime lastEditDateField;
        
        private string displayLastEditDateField;
        
        private long userIdField;
        
        private string editorFirstNameField;
        
        private string editorLastNameField;
        
        private string physicalPathField;
        
        private string logicalPathField;
        
        private string defaultXsltField;
        
        private string packageXsltField;
        
        private string packageDisplayXsltField;
        
        private string designStyleSheetField;
        
        private bool isDefaultField;
        
        private string fieldListField;
        
        /// <remarks/>
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string EditXslt {
            get {
                return this.editXsltField;
            }
            set {
                this.editXsltField = value;
            }
        }
        
        /// <remarks/>
        public string SaveXslt {
            get {
                return this.saveXsltField;
            }
            set {
                this.saveXsltField = value;
            }
        }
        
        /// <remarks/>
        public string Xslt1 {
            get {
                return this.xslt1Field;
            }
            set {
                this.xslt1Field = value;
            }
        }
        
        /// <remarks/>
        public string Xslt2 {
            get {
                return this.xslt2Field;
            }
            set {
                this.xslt2Field = value;
            }
        }
        
        /// <remarks/>
        public string Xslt3 {
            get {
                return this.xslt3Field;
            }
            set {
                this.xslt3Field = value;
            }
        }
        
        /// <remarks/>
        public string Xslt4 {
            get {
                return this.xslt4Field;
            }
            set {
                this.xslt4Field = value;
            }
        }
        
        /// <remarks/>
        public string Xslt5 {
            get {
                return this.xslt5Field;
            }
            set {
                this.xslt5Field = value;
            }
        }
        
        /// <remarks/>
        public string XmlSchema {
            get {
                return this.xmlSchemaField;
            }
            set {
                this.xmlSchemaField = value;
            }
        }
        
        /// <remarks/>
        public string XmlNameSpace {
            get {
                return this.xmlNameSpaceField;
            }
            set {
                this.xmlNameSpaceField = value;
            }
        }
        
        /// <remarks/>
        public string XmlAdvConfig {
            get {
                return this.xmlAdvConfigField;
            }
            set {
                this.xmlAdvConfigField = value;
            }
        }
        
        /// <remarks/>
        public string DateCreated {
            get {
                return this.dateCreatedField;
            }
            set {
                this.dateCreatedField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayDateCreated {
            get {
                return this.displayDateCreatedField;
            }
            set {
                this.displayDateCreatedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastEditDate {
            get {
                return this.lastEditDateField;
            }
            set {
                this.lastEditDateField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayLastEditDate {
            get {
                return this.displayLastEditDateField;
            }
            set {
                this.displayLastEditDateField = value;
            }
        }
        
        /// <remarks/>
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string EditorFirstName {
            get {
                return this.editorFirstNameField;
            }
            set {
                this.editorFirstNameField = value;
            }
        }
        
        /// <remarks/>
        public string EditorLastName {
            get {
                return this.editorLastNameField;
            }
            set {
                this.editorLastNameField = value;
            }
        }
        
        /// <remarks/>
        public string PhysicalPath {
            get {
                return this.physicalPathField;
            }
            set {
                this.physicalPathField = value;
            }
        }
        
        /// <remarks/>
        public string LogicalPath {
            get {
                return this.logicalPathField;
            }
            set {
                this.logicalPathField = value;
            }
        }
        
        /// <remarks/>
        public string DefaultXslt {
            get {
                return this.defaultXsltField;
            }
            set {
                this.defaultXsltField = value;
            }
        }
        
        /// <remarks/>
        public string PackageXslt {
            get {
                return this.packageXsltField;
            }
            set {
                this.packageXsltField = value;
            }
        }
        
        /// <remarks/>
        public string PackageDisplayXslt {
            get {
                return this.packageDisplayXsltField;
            }
            set {
                this.packageDisplayXsltField = value;
            }
        }
        
        /// <remarks/>
        public string DesignStyleSheet {
            get {
                return this.designStyleSheetField;
            }
            set {
                this.designStyleSheetField = value;
            }
        }
        
        /// <remarks/>
        public bool IsDefault {
            get {
                return this.isDefaultField;
            }
            set {
                this.isDefaultField = value;
            }
        }
        
        /// <remarks/>
        public string FieldList {
            get {
                return this.fieldListField;
            }
            set {
                this.fieldListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CmsDataOfContentMetaData))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ContentMetaData))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public abstract partial class BaseDataOfContentMetaData {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ContentMetaData))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public abstract partial class CmsDataOfContentMetaData : BaseDataOfContentMetaData {
        
        private long idField;
        
        /// <remarks/>
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ContentMetaData : CmsDataOfContentMetaData {
        
        private string textField;
        
        private string nameField;
        
        private ContentMetadataDataType dataTypeField;
        
        private string defaultValueField;
        
        private bool requiredField;
        
        private ContentMetadataType typeField;
        
        private bool isEditableField;
        
        private string separatorField;
        
        private bool caseSensitiveField;
        
        private bool removeDuplicateField;
        
        private bool isSearchAllowedField;
        
        private bool isDisplayableField;
        
        private int languageField;
        
        private string selectableTextField;
        
        private bool allowMultipleField;
        
        private bool isSelectableOnlyField;
        
        private bool metaDisplayEEField;
        
        private MetaDataType metaDataObjectTypeField;
        
        /// <remarks/>
        public string Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public ContentMetadataDataType DataType {
            get {
                return this.dataTypeField;
            }
            set {
                this.dataTypeField = value;
            }
        }
        
        /// <remarks/>
        public string DefaultValue {
            get {
                return this.defaultValueField;
            }
            set {
                this.defaultValueField = value;
            }
        }
        
        /// <remarks/>
        public bool Required {
            get {
                return this.requiredField;
            }
            set {
                this.requiredField = value;
            }
        }
        
        /// <remarks/>
        public ContentMetadataType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public bool IsEditable {
            get {
                return this.isEditableField;
            }
            set {
                this.isEditableField = value;
            }
        }
        
        /// <remarks/>
        public string Separator {
            get {
                return this.separatorField;
            }
            set {
                this.separatorField = value;
            }
        }
        
        /// <remarks/>
        public bool CaseSensitive {
            get {
                return this.caseSensitiveField;
            }
            set {
                this.caseSensitiveField = value;
            }
        }
        
        /// <remarks/>
        public bool RemoveDuplicate {
            get {
                return this.removeDuplicateField;
            }
            set {
                this.removeDuplicateField = value;
            }
        }
        
        /// <remarks/>
        public bool IsSearchAllowed {
            get {
                return this.isSearchAllowedField;
            }
            set {
                this.isSearchAllowedField = value;
            }
        }
        
        /// <remarks/>
        public bool IsDisplayable {
            get {
                return this.isDisplayableField;
            }
            set {
                this.isDisplayableField = value;
            }
        }
        
        /// <remarks/>
        public int Language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
        
        /// <remarks/>
        public string SelectableText {
            get {
                return this.selectableTextField;
            }
            set {
                this.selectableTextField = value;
            }
        }
        
        /// <remarks/>
        public bool AllowMultiple {
            get {
                return this.allowMultipleField;
            }
            set {
                this.allowMultipleField = value;
            }
        }
        
        /// <remarks/>
        public bool IsSelectableOnly {
            get {
                return this.isSelectableOnlyField;
            }
            set {
                this.isSelectableOnlyField = value;
            }
        }
        
        /// <remarks/>
        public bool MetaDisplayEE {
            get {
                return this.metaDisplayEEField;
            }
            set {
                this.metaDisplayEEField = value;
            }
        }
        
        /// <remarks/>
        public MetaDataType MetaDataObjectType {
            get {
                return this.metaDataObjectTypeField;
            }
            set {
                this.metaDataObjectTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum ContentMetadataDataType {
        
        /// <remarks/>
        Text,
        
        /// <remarks/>
        Number,
        
        /// <remarks/>
        Byte,
        
        /// <remarks/>
        Double,
        
        /// <remarks/>
        Float,
        
        /// <remarks/>
        Integer,
        
        /// <remarks/>
        Long,
        
        /// <remarks/>
        Short,
        
        /// <remarks/>
        Date,
        
        /// <remarks/>
        Boolean,
        
        /// <remarks/>
        SingleSelect,
        
        /// <remarks/>
        MultiSelect,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum ContentMetadataType {
        
        /// <remarks/>
        HtmlTag,
        
        /// <remarks/>
        MetaTag,
        
        /// <remarks/>
        CollectionSelector,
        
        /// <remarks/>
        ListSummarySelector,
        
        /// <remarks/>
        ContentSelector,
        
        /// <remarks/>
        ImageSelector,
        
        /// <remarks/>
        LinkSelector,
        
        /// <remarks/>
        FileSelector,
        
        /// <remarks/>
        MenuSelector,
        
        /// <remarks/>
        UserSelector,
        
        /// <remarks/>
        SearchableProperty,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum MetaDataType {
        
        /// <remarks/>
        Normal,
        
        /// <remarks/>
        ProductAttribute,
        
        /// <remarks/>
        Tags,
        
        /// <remarks/>
        Categories,
        
        /// <remarks/>
        Trackback,
        
        /// <remarks/>
        Ping,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class AssetData {
        
        private string idField;
        
        private string versionField;
        
        private string mimeTypeField;
        
        private string mimeNameField;
        
        private string fileNameField;
        
        private string fileExtensionField;
        
        private string imageUrlField;
        
        private string iconField;
        
        private string statusField;
        
        private int languageField;
        
        private int typeField;
        
        private string pluginTypeField;
        
        private bool publishPdfActiveField;
        
        /// <remarks/>
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        public string MimeType {
            get {
                return this.mimeTypeField;
            }
            set {
                this.mimeTypeField = value;
            }
        }
        
        /// <remarks/>
        public string MimeName {
            get {
                return this.mimeNameField;
            }
            set {
                this.mimeNameField = value;
            }
        }
        
        /// <remarks/>
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        public string FileExtension {
            get {
                return this.fileExtensionField;
            }
            set {
                this.fileExtensionField = value;
            }
        }
        
        /// <remarks/>
        public string ImageUrl {
            get {
                return this.imageUrlField;
            }
            set {
                this.imageUrlField = value;
            }
        }
        
        /// <remarks/>
        public string Icon {
            get {
                return this.iconField;
            }
            set {
                this.iconField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public int Language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
        
        /// <remarks/>
        public int Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string PluginType {
            get {
                return this.pluginTypeField;
            }
            set {
                this.pluginTypeField = value;
            }
        }
        
        /// <remarks/>
        public bool PublishPdfActive {
            get {
                return this.publishPdfActiveField;
            }
            set {
                this.publishPdfActiveField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CmsDataOfContentBaseData))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CmsLocalizedDataOfContentBaseData))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ContentBaseData))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ContentData))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ContentStateData))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ContentEditData))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public abstract partial class BaseDataOfContentBaseData {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CmsLocalizedDataOfContentBaseData))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ContentBaseData))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ContentData))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ContentStateData))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ContentEditData))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public abstract partial class CmsDataOfContentBaseData : BaseDataOfContentBaseData {
        
        private long idField;
        
        /// <remarks/>
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ContentBaseData))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ContentData))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ContentStateData))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ContentEditData))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public abstract partial class CmsLocalizedDataOfContentBaseData : CmsDataOfContentBaseData {
        
        private int languageIdField;
        
        /// <remarks/>
        public int LanguageId {
            get {
                return this.languageIdField;
            }
            set {
                this.languageIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ContentData))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ContentStateData))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ContentEditData))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ContentBaseData : CmsLocalizedDataOfContentBaseData {
        
        private string titleField;
        
        private string teaserField;
        
        private string htmlField;
        
        private string quicklinkField;
        
        private string imageField;
        
        private bool isPrivateField;
        
        private int typeField;
        
        private CMSContentSubtype subTypeField;
        
        private long externalTypeIdField;
        
        private AssetData assetDataField;
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string Teaser {
            get {
                return this.teaserField;
            }
            set {
                this.teaserField = value;
            }
        }
        
        /// <remarks/>
        public string Html {
            get {
                return this.htmlField;
            }
            set {
                this.htmlField = value;
            }
        }
        
        /// <remarks/>
        public string Quicklink {
            get {
                return this.quicklinkField;
            }
            set {
                this.quicklinkField = value;
            }
        }
        
        /// <remarks/>
        public string Image {
            get {
                return this.imageField;
            }
            set {
                this.imageField = value;
            }
        }
        
        /// <remarks/>
        public bool IsPrivate {
            get {
                return this.isPrivateField;
            }
            set {
                this.isPrivateField = value;
            }
        }
        
        /// <remarks/>
        public int Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public CMSContentSubtype SubType {
            get {
                return this.subTypeField;
            }
            set {
                this.subTypeField = value;
            }
        }
        
        /// <remarks/>
        public long ExternalTypeId {
            get {
                return this.externalTypeIdField;
            }
            set {
                this.externalTypeIdField = value;
            }
        }
        
        /// <remarks/>
        public AssetData AssetData {
            get {
                return this.assetDataField;
            }
            set {
                this.assetDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum CMSContentSubtype {
        
        /// <remarks/>
        AllTypes,
        
        /// <remarks/>
        Content,
        
        /// <remarks/>
        PageBuilderData,
        
        /// <remarks/>
        WebEvent,
        
        /// <remarks/>
        PageBuilderMasterData,
        
        /// <remarks/>
        CTAData,
        
        /// <remarks/>
        LandingPageData,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ContentStateData))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ContentEditData))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ContentData : ContentBaseData {
        
        private string editorFirstNameField;
        
        private string editorLastNameField;
        
        private string commentField;
        
        private System.DateTime dateModifiedField;
        
        private string displayLastEditDateField;
        
        private System.DateTime dateCreatedField;
        
        private string displayDateCreatedField;
        
        private long userIdField;
        
        private long folderIdField;
        
        private bool isPermissionsInheritedField;
        
        private long permissionInheritedFromField;
        
        private string statusField;
        
        private System.Nullable<System.DateTime> goLiveDateField;
        
        private string displayGoLiveField;
        
        private int approvalMethodField;
        
        private bool isPublishedField;
        
        private bool isSearchableField;
        
        private long xmlInheritedFromField;
        
        private ContentMetaData[] metaDataField;
        
        private string displayEndDateField;
        
        private System.DateTime expireDateField;
        
        private CMSEndDateAction endDateActionTypeField;
        
        private XmlConfigData xmlConfigurationField;
        
        private string styleSheetField;
        
        private string languageDescriptionField;
        
        private string approverField;
        
        private string textField;
        
        private string pathField;
        
        private string contentPathField;
        
        private int contTypeField;
        
        private int updatesField;
        
        private string folderNameField;
        
        private string mediaTextField;
        
        private long historyIdField;
        
        private string hyperLinkField;
        
        private TemplateData templateConfigurationField;
        
        private long flagDefIdField;
        
        /// <remarks/>
        public string EditorFirstName {
            get {
                return this.editorFirstNameField;
            }
            set {
                this.editorFirstNameField = value;
            }
        }
        
        /// <remarks/>
        public string EditorLastName {
            get {
                return this.editorLastNameField;
            }
            set {
                this.editorLastNameField = value;
            }
        }
        
        /// <remarks/>
        public string Comment {
            get {
                return this.commentField;
            }
            set {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateModified {
            get {
                return this.dateModifiedField;
            }
            set {
                this.dateModifiedField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayLastEditDate {
            get {
                return this.displayLastEditDateField;
            }
            set {
                this.displayLastEditDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateCreated {
            get {
                return this.dateCreatedField;
            }
            set {
                this.dateCreatedField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayDateCreated {
            get {
                return this.displayDateCreatedField;
            }
            set {
                this.displayDateCreatedField = value;
            }
        }
        
        /// <remarks/>
        public long UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public long FolderId {
            get {
                return this.folderIdField;
            }
            set {
                this.folderIdField = value;
            }
        }
        
        /// <remarks/>
        public bool IsPermissionsInherited {
            get {
                return this.isPermissionsInheritedField;
            }
            set {
                this.isPermissionsInheritedField = value;
            }
        }
        
        /// <remarks/>
        public long PermissionInheritedFrom {
            get {
                return this.permissionInheritedFromField;
            }
            set {
                this.permissionInheritedFromField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> GoLiveDate {
            get {
                return this.goLiveDateField;
            }
            set {
                this.goLiveDateField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayGoLive {
            get {
                return this.displayGoLiveField;
            }
            set {
                this.displayGoLiveField = value;
            }
        }
        
        /// <remarks/>
        public int ApprovalMethod {
            get {
                return this.approvalMethodField;
            }
            set {
                this.approvalMethodField = value;
            }
        }
        
        /// <remarks/>
        public bool IsPublished {
            get {
                return this.isPublishedField;
            }
            set {
                this.isPublishedField = value;
            }
        }
        
        /// <remarks/>
        public bool IsSearchable {
            get {
                return this.isSearchableField;
            }
            set {
                this.isSearchableField = value;
            }
        }
        
        /// <remarks/>
        public long XmlInheritedFrom {
            get {
                return this.xmlInheritedFromField;
            }
            set {
                this.xmlInheritedFromField = value;
            }
        }
        
        /// <remarks/>
        public ContentMetaData[] MetaData {
            get {
                return this.metaDataField;
            }
            set {
                this.metaDataField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayEndDate {
            get {
                return this.displayEndDateField;
            }
            set {
                this.displayEndDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ExpireDate {
            get {
                return this.expireDateField;
            }
            set {
                this.expireDateField = value;
            }
        }
        
        /// <remarks/>
        public CMSEndDateAction EndDateActionType {
            get {
                return this.endDateActionTypeField;
            }
            set {
                this.endDateActionTypeField = value;
            }
        }
        
        /// <remarks/>
        public XmlConfigData XmlConfiguration {
            get {
                return this.xmlConfigurationField;
            }
            set {
                this.xmlConfigurationField = value;
            }
        }
        
        /// <remarks/>
        public string StyleSheet {
            get {
                return this.styleSheetField;
            }
            set {
                this.styleSheetField = value;
            }
        }
        
        /// <remarks/>
        public string LanguageDescription {
            get {
                return this.languageDescriptionField;
            }
            set {
                this.languageDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Approver {
            get {
                return this.approverField;
            }
            set {
                this.approverField = value;
            }
        }
        
        /// <remarks/>
        public string Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        public string Path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
        
        /// <remarks/>
        public string ContentPath {
            get {
                return this.contentPathField;
            }
            set {
                this.contentPathField = value;
            }
        }
        
        /// <remarks/>
        public int ContType {
            get {
                return this.contTypeField;
            }
            set {
                this.contTypeField = value;
            }
        }
        
        /// <remarks/>
        public int Updates {
            get {
                return this.updatesField;
            }
            set {
                this.updatesField = value;
            }
        }
        
        /// <remarks/>
        public string FolderName {
            get {
                return this.folderNameField;
            }
            set {
                this.folderNameField = value;
            }
        }
        
        /// <remarks/>
        public string MediaText {
            get {
                return this.mediaTextField;
            }
            set {
                this.mediaTextField = value;
            }
        }
        
        /// <remarks/>
        public long HistoryId {
            get {
                return this.historyIdField;
            }
            set {
                this.historyIdField = value;
            }
        }
        
        /// <remarks/>
        public string HyperLink {
            get {
                return this.hyperLinkField;
            }
            set {
                this.hyperLinkField = value;
            }
        }
        
        /// <remarks/>
        public TemplateData TemplateConfiguration {
            get {
                return this.templateConfigurationField;
            }
            set {
                this.templateConfigurationField = value;
            }
        }
        
        /// <remarks/>
        public long FlagDefId {
            get {
                return this.flagDefIdField;
            }
            set {
                this.flagDefIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum CMSEndDateAction {
        
        /// <remarks/>
        Undefined,
        
        /// <remarks/>
        Archive_Expire,
        
        /// <remarks/>
        Archive_Display,
        
        /// <remarks/>
        Refresh_Report,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ContentStateData : ContentData {
        
        private string currentTitleField;
        
        private string currentDisplayEndDateField;
        
        private string currentEndDateField;
        
        private string currentEditorFirstNameField;
        
        private string currentEditorLastNameField;
        
        private string previousStatusField;
        
        private long currentFolderIdField;
        
        private string currentGoLiveField;
        
        private string currentDisplayGoLiveField;
        
        private string currentLastEditDateField;
        
        private string currentDisplayLastEditDateField;
        
        private bool currentMetaCompleteField;
        
        private long currentUserIdField;
        
        private string currentCommentField;
        
        private bool isFolderPrivateField;
        
        /// <remarks/>
        public string CurrentTitle {
            get {
                return this.currentTitleField;
            }
            set {
                this.currentTitleField = value;
            }
        }
        
        /// <remarks/>
        public string CurrentDisplayEndDate {
            get {
                return this.currentDisplayEndDateField;
            }
            set {
                this.currentDisplayEndDateField = value;
            }
        }
        
        /// <remarks/>
        public string CurrentEndDate {
            get {
                return this.currentEndDateField;
            }
            set {
                this.currentEndDateField = value;
            }
        }
        
        /// <remarks/>
        public string CurrentEditorFirstName {
            get {
                return this.currentEditorFirstNameField;
            }
            set {
                this.currentEditorFirstNameField = value;
            }
        }
        
        /// <remarks/>
        public string CurrentEditorLastName {
            get {
                return this.currentEditorLastNameField;
            }
            set {
                this.currentEditorLastNameField = value;
            }
        }
        
        /// <remarks/>
        public string PreviousStatus {
            get {
                return this.previousStatusField;
            }
            set {
                this.previousStatusField = value;
            }
        }
        
        /// <remarks/>
        public long CurrentFolderId {
            get {
                return this.currentFolderIdField;
            }
            set {
                this.currentFolderIdField = value;
            }
        }
        
        /// <remarks/>
        public string CurrentGoLive {
            get {
                return this.currentGoLiveField;
            }
            set {
                this.currentGoLiveField = value;
            }
        }
        
        /// <remarks/>
        public string CurrentDisplayGoLive {
            get {
                return this.currentDisplayGoLiveField;
            }
            set {
                this.currentDisplayGoLiveField = value;
            }
        }
        
        /// <remarks/>
        public string CurrentLastEditDate {
            get {
                return this.currentLastEditDateField;
            }
            set {
                this.currentLastEditDateField = value;
            }
        }
        
        /// <remarks/>
        public string CurrentDisplayLastEditDate {
            get {
                return this.currentDisplayLastEditDateField;
            }
            set {
                this.currentDisplayLastEditDateField = value;
            }
        }
        
        /// <remarks/>
        public bool CurrentMetaComplete {
            get {
                return this.currentMetaCompleteField;
            }
            set {
                this.currentMetaCompleteField = value;
            }
        }
        
        /// <remarks/>
        public long CurrentUserId {
            get {
                return this.currentUserIdField;
            }
            set {
                this.currentUserIdField = value;
            }
        }
        
        /// <remarks/>
        public string CurrentComment {
            get {
                return this.currentCommentField;
            }
            set {
                this.currentCommentField = value;
            }
        }
        
        /// <remarks/>
        public bool IsFolderPrivate {
            get {
                return this.isFolderPrivateField;
            }
            set {
                this.isFolderPrivateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ContentEditData : ContentData {
        
        private int noOfSavesField;
        
        private int maxContentSizeField;
        
        private int maxSummarySizeField;
        
        private string currentStatusField;
        
        private bool lockedContentLinkField;
        
        private bool fileChangedField;
        
        /// <remarks/>
        public int NoOfSaves {
            get {
                return this.noOfSavesField;
            }
            set {
                this.noOfSavesField = value;
            }
        }
        
        /// <remarks/>
        public int MaxContentSize {
            get {
                return this.maxContentSizeField;
            }
            set {
                this.maxContentSizeField = value;
            }
        }
        
        /// <remarks/>
        public int MaxSummarySize {
            get {
                return this.maxSummarySizeField;
            }
            set {
                this.maxSummarySizeField = value;
            }
        }
        
        /// <remarks/>
        public string CurrentStatus {
            get {
                return this.currentStatusField;
            }
            set {
                this.currentStatusField = value;
            }
        }
        
        /// <remarks/>
        public bool LockedContentLink {
            get {
                return this.lockedContentLinkField;
            }
            set {
                this.lockedContentLinkField = value;
            }
        }
        
        /// <remarks/>
        public bool FileChanged {
            get {
                return this.fileChangedField;
            }
            set {
                this.fileChangedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/", IsNullable=false)]
    public partial class AuthenticationHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string usernameField;
        
        private string passwordField;
        
        private string domainField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string Domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum ContentResultType {
        
        /// <remarks/>
        Published,
        
        /// <remarks/>
        Staged,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CheckOutContentCompletedEventHandler(object sender, CheckOutContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckOutContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckOutContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SaveContentCompletedEventHandler(object sender, SaveContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CopyContentToFolderCompletedEventHandler(object sender, CopyContentToFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CopyContentToFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CopyContentToFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ContentData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ContentData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void AddContentCompletedEventHandler(object sender, AddContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void AddContent1CompletedEventHandler(object sender, AddContent1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddContent1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddContent1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void AddContent2CompletedEventHandler(object sender, AddContent2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddContent2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddContent2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void AddContent3CompletedEventHandler(object sender, AddContent3CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddContent3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddContent3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void AddContent4CompletedEventHandler(object sender, AddContent4CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddContent4CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddContent4CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetContentForEditingCompletedEventHandler(object sender, GetContentForEditingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContentForEditingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContentForEditingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ContentEditData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ContentEditData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void DeleteContentItemCompletedEventHandler(object sender, DeleteContentItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteContentItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteContentItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetAddViewLanguageCompletedEventHandler(object sender, GetAddViewLanguageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAddViewLanguageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAddViewLanguageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LanguageData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LanguageData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetAllCommentsCompletedEventHandler(object sender, GetAllCommentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllCommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllCommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CommentData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CommentData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetAllTemplatesCompletedEventHandler(object sender, GetAllTemplatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllTemplatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllTemplatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TemplateData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TemplateData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void UpdateContentMetaDataCompletedEventHandler(object sender, UpdateContentMetaDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateContentMetaDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateContentMetaDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetAllUnassignedItemApprovalsCompletedEventHandler(object sender, GetAllUnassignedItemApprovalsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllUnassignedItemApprovalsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllUnassignedItemApprovalsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ApprovalData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ApprovalData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetChildContentCompletedEventHandler(object sender, GetChildContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChildContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChildContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ContentData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ContentData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetChildContent1CompletedEventHandler(object sender, GetChildContent1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChildContent1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChildContent1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ContentData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ContentData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetContentCompletedEventHandler(object sender, GetContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ContentData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ContentData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetContentByHistoryCompletedEventHandler(object sender, GetContentByHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContentByHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContentByHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ContentData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ContentData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetContentStateCompletedEventHandler(object sender, GetContentStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContentStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContentStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ContentStateData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ContentStateData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetContentStatusCompletedEventHandler(object sender, GetContentStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContentStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContentStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetDomainCompletedEventHandler(object sender, GetDomainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDomainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDomainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void MoveContentToFolderCompletedEventHandler(object sender, MoveContentToFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MoveContentToFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MoveContentToFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ContentData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ContentData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void PublishContentCompletedEventHandler(object sender, PublishContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PublishContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PublishContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void RenameContentCompletedEventHandler(object sender, RenameContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RenameContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RenameContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ContentData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ContentData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void SubmitForDeleteCompletedEventHandler(object sender, SubmitForDeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitForDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitForDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void UndoCheckoutCompletedEventHandler(object sender, UndoCheckoutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UndoCheckoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UndoCheckoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void NotifySubscriptionForSynchronizedContentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void NotifySubscriptionForSynchronizedContentByTypeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591